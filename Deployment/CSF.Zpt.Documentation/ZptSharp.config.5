.TH ZptSharp.config 5
.SH NAME
ZptSharp.config \- configuration file for ZPT-Sharp
.SH SYNOPSIS
.PP
The filename applicable to the configuration file depends upon your use-case:
.RS
\fIZptBuilder.exe.config\fR
.RE
.RS
\fIWeb.config\fR
.RE
.RS
\fI[YourApplication].config\fR
.RE
.SH DESCRIPTION
.PP
The ZPT-Sharp configuration file is primarily used for indicating which ZPT-Sharp plugins are installed.
The listed plugins are loaded at run-time by the core logic and used for rendering documents.
.PP
Other uses of the configuration file depend upon your installation scenario and requirements.
If the \fBCSharp\fR \fBexpressions\fR \fBplugin\fR is installed then the configuration file controls application-wide settings related to assembly references and namespace imports.
Additionally, the configuration may be used in order to configure the capture and recording of diagnostic/logging information from ZPT-Sharp.
.PP
The filename for the configuration file depends upon the use-case.
When using the \fIZptBuilder.exe\fR application, the configuration file must be named \fIZptBuilder.exe.config\fR.
When using the ASP.NET MVC ViewEngine, the content documented here must be integrated into your web application's \fIWeb.config\fR file.
When using ZPT-Sharp as an API, the applicable content must be integrated into your own application's configuration file.
.PP
This file is written using the .NET XML configuration file format.
Full coverage of this format is beyond the scope of this manual; refer to the appropriate .NET framework documentation where applicable.
.SH INSTALLING PLUGINS
.PP
The mandatory part of the configuration file is the section which installs plugins - document providers and expression evaluators.
At a minimum for any useful operation, at least one document provider and one expression evaluator plugin must be installed.
One expression evaluator must be nominated as the default plugin; this default evaluator is used for expressions which are not qualified with an expression prefix.
In order to comply with the TALES specification, you should choose \fICSF.Zpt.ExpressionEvaluators.PathExpressions.PathExpressionEvaluator\fR as the default expression evaluator.
This will make \fBpath:\fR the default expression type, where no prefix is given.
You should also nominate the default HTML and XML document provider plugins.
These default providers are used when a ZPT document is to be created, a provider type has not been explicitly specified, but it is known whether it is either HTML or XML formatted.
.PP
The following example shows the relevant content to install three expression evaluator plugins, two document provider plugins, and nominate the defaults accordingly.
.PP
.nf
<configuration>
  <configSections>
    <sectionGroup name="CSF">
      <sectionGroup name="Zpt">
          <section name="PluginConfigurationSection"
                   type="CSF.Zpt.PluginConfigurationSection, CSF.Zpt" />
      </sectionGroup>
    </sectionGroup>
  </configSections>

  <CSF>
    <Zpt>
      <PluginConfigurationSection DefaultHtmlDocumentProvider="CSF.Zpt.DocumentProviders.HtmlZptDocumentProvider"
                                  DefaultXmlDocumentProvider="CSF.Zpt.DocumentProviders.XmlLinqZptDocumentProvider"
                                  DefaultExpressionEvaluator="CSF.Zpt.ExpressionEvaluators.PathExpressions.PathExpressionEvaluator">
        <PluginAssemblies>
          <Assembly Path="CSF.Zpt.DocumentProviders.HtmlHAP.dll" />
          <Assembly Path="CSF.Zpt.DocumentProviders.XmlLinq.dll" />
          <Assembly Path="CSF.Zpt.ExpressionEvaluators.PathExpressions.dll" />
          <Assembly Path="CSF.Zpt.ExpressionEvaluators.StringExpressions.dll" />
          <Assembly Path="CSF.Zpt.ExpressionEvaluators.NotExpressions.dll" />
        </PluginAssemblies>
      </PluginConfigurationSection>
    </Zpt>
  </CSF>
</configuration>
.fi
.PP
Each \fI<Assembly>\fR element, in its \fIPath\fR attribute, lists a single .NET assembly containing one or more plugins.
The assembly paths are either absolute or relative paths.
Where a relative path is given, it is evaluated based upon the path to the \fICSF.Zpt.dll\fR assembly.
If the plugin assembly is in the same directory as that main ZPT-Sharp assembly then just the filename alone is sufficient (as shown above).
The default expression evaluator, XML document provider and HTML document provider are indicated by listing their namespace-qualified type names in the appropriate configuration attributes.
.SH CONFIGURING CSHARP EXPRESSIONS
.PP
If the plugin \fICSF.Zpt.ExpressionEvaluators.CSharpExpressions.dll\fR is installed, then CSharp expressions are available.
There are two settings affecting CSharp expressions which may be specified in the configuration file.
These are the default assemblies which will be referenced by compiled expressions and also the namespaces which will be imported into those expressions.
The settings made in the configuration file will affect all CSharp expressions evaluated by the application.
Effectively, the configuration specifies the baseline assembly references and namespace imports.
Further assemblies/namespaces may be chosen via expressions in ZPT documents.
.PP
The default configuration (which is also used if the configuration section below is not present) is as follows:
.RS
The assembly \fISystem.dll\fR will be referenced
.RE
.RS
The namespaces \fISystem\fR and \fISystem.Linq\fR will be imported (without aliases)
.RE
.PP
For more information please consult the documentation for writing CSharp expressions.
These two configuration options are roughly equivalent to the expression types \fBcsassembly\fR and \fBcsnamespace\fR.
Each permits as many or as few entries as desired; repeat the \fIAssembly\fR or \fINamespace\fR XML element for each item you wish to specify.
.PP
.nf
<configuration>
  <configSections>
    <sectionGroup name="CSF">
      <sectionGroup name="Zpt">
          <sectionGroup name="ExpressionEvaluators">
            <sectionGroup name="CSharpExpressions">
              <section name="ExpressionConfigurationSection"
                       type="CSF.Zpt.ExpressionEvaluators.CSharpExpressions.ExpressionConfigurationSection, CSF.Zpt.ExpressionEvaluators.CSharpExpressions" />
            </sectionGroup>
          </sectionGroup>
      </sectionGroup>
    </sectionGroup>
  </configSections>

  <CSF>
    <Zpt>
      <ExpressionEvaluators>
        <CSharpExpressions>
          <ExpressionConfigurationSection>
            <Assemblies>
              <Assembly Name="NAME" />
            </Assemblies>
            <Namespaces>
              <Namespace Name="NAMESPACE" Alias="ALIAS" />
            </Namespaces>
          </ExpressionConfigurationSection>
        </CSharpExpressions>
      </ExpressionEvaluators>
    </Zpt>
  </CSF>
</configuration>
.fi
.PP
Within the assembly references, the \fBNAME\fR placeholder refers to the filename of a referenced assembly.
That assembly must be deployed into the same directory as the application's assemblies.
The name is the full assembly filename including the \fI.dll\fR extension.
.PP
For namespace imports, the \fBNAMESPACE\fR placeholder is the name of the namespace (for example \fISystem.Linq\fR).
The \fIAlias\fR attribute is optional; when it is provided, the imported namespace will be assigned to the named alias.
The code generated looks something like the following examples:
.PP
.nf
// Without an alias: <Namespace Name="My.Namespace" />
using My.Namespace;

// With an alias: <Namespace Name="My.Other.Namespace" Alias="other" />
using other = My.Other.Namespace;
.fi
.SH CONFIGURING DIAGNOSTICS
.PP
ZPT-Sharp makes use of the .NET \fBSystem.Diagnostics\fR functionality to make diagnostic and logging information available, configured via the configuration file.
This .NET functionality provides a highly rich and configurable API, an in-depth examination of which is well beyond the scope of this documentation.
Refer to the appropriate .NET framework documentation for more information.
.PP
For reference, the \fBTraceSource\fR names used by ZPT-Sharp are as follows:
.RS
\fICSF.Zpt\fR
.RE
.RS
\fICSF.Zpt.Cli\fR
.RE
.RS
\fICSF.Zpt.Mvc\fR
.RE
.PP
The following example configuration content illustrates a minimal logging set-up which will record messages to a file.
.PP
.nf
<configuration>
  <system.diagnostics>
    <sources>
      <source name="CSF.Zpt" switchName="defaultSwitch" switchType="System.Diagnostics.SourceSwitch">
        <listeners>
          <add name="myListener" 
               type="System.Diagnostics.TextWriterTraceListener" 
               initializeData="ZptSharp.log" />
          <remove name="Default" />
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="defaultSwitch" value="Verbose"/>
    </switches>
  </system.diagnostics>
</configuration>
.fi
.SH SEE ALSO
.PP
.I ZptBuilder.exe\fR "(1)"
.RS
Documentation for the ZptBuilder application, which makes use of this configuration
.RE
.PP
Framework documentation for .NET XML configuration files
.RS
Describes the overall layout and syntax of this configuration file format.
XML configuration files have a great deal of other functionality available, beyond that which is described here.
.RE
.PP
Framework documentation for the .NET \fISystem.Diagnostics\fR namespace
.RS
Describes how to set-up and configure \fITraceListener\fR instances.
Listeners subscribe to the \fITraceSource\fR instances exposed by the application code.
.RE