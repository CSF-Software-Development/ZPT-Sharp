<html>
<head>
<title>Screenplay report</title>
<meta charset="UTF-8" />
<style tal:condition="nothing">
@import url("reset.css");
@import url("page.css");
@import url("reports.css");
@import url("interactions.css");
</style>
<style tal:content="here/BundledStyles | nothing"></style>
<script tal:condition="nothing" src="jquery-3.2.1.slim.min.js"></script>
<script tal:condition="nothing" src="PageInteractions.js"></script>
<script tal:condition="nothing" src="Filter.js"></script>
<script tal:condition="nothing" src="Folding.js"></script>
<script tal:condition="nothing" src="Interactions.js"></script>
<script tal:content="here/BundledScripts | nothing"></script>
</head>
<body tal:define="model here;report here/Report">
<header>
  <h1>Screenplay report</h1>
  <div class="summary">
    <h2 class="hidden">Count of passing, failing and total features/scenarios</h2>
    <table id="summary_table">
      <colgroup>
        <col class="performance_type" />
        <col class="success" />
        <col class="failing" />
        <col class="total" />
      </colgroup>
      <thead>
        <tr>
          <th></th>
          <th>Success</th>
          <th>Failure</th>
          <th>Total</th>
        </tr>
      </thead>
      <tbody>
        <tr class="features">
          <th>Features</th>
          <td class="success" tal:content="report/SuccessfulFeatureCount">5</td>
          <td class="failing" tal:content="report/FailingFeatureCount">3</td>
          <td class="total" tal:content="report/TotalFeatureCount">8</td>
        </tr>
        <tr class="scenarios">
          <th>Scenarios</th>
          <td class="success" tal:content="report/SuccessfulScenarioCount">10</td>
          <td class="failing" tal:content="report/FailingScenarioCount">20</td>
          <td class="total" tal:content="report/TotalScenarioCount">30</td>
        </tr>
      </tbody>
    </table>
  </div>
</header>
<section class="report"
         tal:define="features report/Features;
                     myMacros template/macros">
  <h2 class="hidden">Features, scenarios and reportables in this report</h2>
  <ul class="features">
    <li tal:condition="nothing" class="feature success">
      <header>
        <div class="identifier">
          <span class="hidden">Feature ID:</span>
          Another.Feature.Identifier
        </div>
        <h2 class="name">
          <span class="hidden">Feature name:</span>
          Another feature name
        </h2>
      </header>
      <ul class="scenarios">
        <li class="scenario success">
          <header>
            <div class="identifier">
              <span class="hidden">Scenario ID:</span>
              Feature2.Scenario1.Identifier.Here
            </div>
            <h3 class="name">
              <span class="hidden">Scenario name:</span>
              A scenario in a different feature
            </h3>
          </header>
          <ol class="reportables">
            <li class="reportable">
              <!-- The base macro for a reportable, we never use this directly, only extend it -->
              <div metal:define-macro="reportable"
                   tal:define="outcomeClass csharp:model.GetOutcomeClass(reportable);
                               reportableClass csharp:model.GetReportableClass(reportable);
                               containerClass string:$outcomeClass $reportableClass"
                   tal:attributes="class containerClass"
                   class="performance success template">
                <p class="description"
                   tal:define="actor reportable/Actor">
                  <strong tal:condition="rootReportable"
                          tal:content="reportable/PerformanceType"
                          class="performance_type">Given</strong>
                  <span metal:define-slot="body" class="body">the body of this reportable</span>
                </p>
                <div class="additional_content"
                     metal:define-slot="additional_content"
                     tal:condition="nothing"
                     style="display: none;">
                  Additional content
                </div>
              </div>
            </li>
            <li class="reportable">
              <!-- The macro for an ability -->
              <div metal:extend-macro="reportable"
                   metal:define-macro="ability"
                   class="ability success inner_macro">
                <p class="description">
                  <strong class="performance_type">Given</strong>
                  <span metal:fill-slot="body" class="body"
                        tal:define="ability reportable/Ability;
                                    reportableAssembly csassembly:CSF.Zpt.MVC5.Profiles;
                                    abilityType cstype:ability CSF.Screenplay.Reporting.IReportable;
                                    reportBody csharp:ability.GetReport(actor)"
                        tal:content="reportBody | default">Joe is able to browse the web</span>
                </p>
              </div>
            </li>
            <li class="reportable">
              <!-- The base macro for a performance, it can be used directly or extended -->
              <div metal:extend-macro="reportable"
                   metal:define-macro="performance"
                   class="performance success inner_macro">
                <p class="description">
                  <strong class="performance_type">When</strong>
                  <span metal:fill-slot="body" class="body"
                        tal:define="performable reportable/Performable;
                                    reportableAssembly csassembly:CSF.Zpt.MVC5.Profiles;
                                    performableType cstype:performable CSF.Screenplay.Reporting.IReportable;
                                    reportBody csharp:performable.GetReport(actor)"
                        tal:content="reportBody | default">Joe attempts to do a thing</span>
                </p>
                <div class="additional_content"
                     metal:fill-slot="additional_content"
                     tal:condition="reportable/HasAdditionalContent">
                  <div class="extended_content"
                       metal:define-slot="extended_content"
                       tal:condition="nothing"
                       style="display: none;">
                    Extended content
                  </div>
                  <ol tal:define="reportables reportable/Reportables;
                                  hasReportables reportable/HasReportables;
                                  rootReportable csharp:false"
                      class="reportables"
                      tal:condition="hasReportables">
                    <li tal:repeat="reportable reportables" class="reportable">
                      <tal:block define="macroName csharp:model.GetMacroName(reportable);
                                         macro myMacros/?macroName;
                                         macroMarkup load:macro"
                                 replace="structure macroMarkup | nothing">
                        <p>Child reportable content</p>
                      </tal:block>
                    </li>
                  </ol>
                </div>
              </div>
            </li>
            <li class="reportable">
              <!-- The macro for a performance which has a result -->
              <div metal:extend-macro="performance"
                   metal:define-macro="performance_success_result"
                   class="performance success inner_macro">
                <p class="description">
                  <strong class="performance_type">Then</strong>
                  <span class="body">Joe reads some kind of value</span>
                </p>
                <div class="additional_content">
                  <div class="extended_content performance_result"
                       metal:fill-slot="extended_content">
                    <p>
                      <strong>Result</strong>
                      <span tal:replace="csharp:model.Format(reportable.Result)">The performance result</span>
                    </p>
                  </div>
                </div>
              </div>
            </li>
            <li class="reportable">
              <!-- The macro for a performance which has failed with an exception -->
              <div metal:extend-macro="performance"
                   metal:define-macro="performance_failure_exception"
                   class="performance failure inner_macro">
                <p class="description">
                  <strong class="performance_type">Then</strong>
                  <span class="body">Joe does something that fails</span>
                </p>
                <div class="additional_content">
                  <div class="extended_content performance_exception"
                       metal:fill-slot="extended_content"
                       tal:define="exception reportable/Exception | nothing;
                                   canFormatException csharp:model.HasFormat(exception)">
                    <p tal:condition="csharp:exception != null &amp;&amp; canFormatException">
                      <strong>Failed</strong>
                      <span tal:replace="csharp:model.Format(exception)">The formatted exception</span>
                    </p>
                    <p tal:condition="csharp:exception != null &amp;&amp; !canFormatException">
                      <strong>Failed</strong> with an exception
                      <pre tal:content="exception">Exception
  at My.Funky.Stack.Trace.Line1 &gt; Something
  at My.Funky.Stack.Trace.Line2 &gt; Something else
  at My.Funky.Stack.Trace.Line3 &gt; Something different</pre>
                    </p>
                    <p>
                      <strong>Failed</strong>
                    </p>
                  </div>
                </div>
              </div>
            </li>
          </ol>
        </li>
      </ul>
    </li>
    <li tal:repeat="feature features"
        class="feature failure"
        tal:attributes="class csharp:model.GetOutcomeClass(feature)">
      <header>
        <div class="identifier"
             tal:condition="feature/Id | nothing">
          <span class="hidden">Feature ID:</span>
          <span tal:replace="feature/Id">Feature.Identifier.Here</span>
        </div>
        <h2 class="name">
          <span class="hidden">Feature name:</span>
          <span tal:replace="feature/FriendlyName">This is where the feature name goes</span>
        </h2>
      </header>
      <ul class="scenarios" tal:define="scenarios feature/Scenarios">
        <li tal:repeat="scenario scenarios"
            class="scenario success"
            tal:attributes="class csharp:model.GetOutcomeClass(scenario)">
          <header>
            <div class="identifier"
                 tal:condition="scenario/Id | nothing">
              <span class="hidden">Scenario ID:</span>
              <span tal:replace="scenario/Id">Scenario.Identifier.Here</span>
            </div>
            <h3 class="name">
              <span class="hidden">Scenario name:</span>
              <span tal:replace="scenario/FriendlyName">My very interesting scenario</span>
            </h3>
          </header>
          <ol class="reportables"
              tal:define="reportables scenario/Reportables;
                          rootReportable csharp:true">
            <li tal:repeat="reportable reportables" class="reportable">
              <div tal:define="macroName csharp:model.GetMacroName(reportable);
                               macro myMacros/?macroName;
                               macroMarkup load:macro"
                   tal:replace="structure macroMarkup | nothing">
                <p class="description">
                  <strong class="performance_type">Given</strong>
                  <span class="body">Reportable content</span>
                </p>
              </div>
            </li>
          </ol>
        </li>
        <li class="scenario failure" tal:condition="nothing">
          <header>
            <div class="identifier">
              <span class="hidden">Scenario ID:</span>
              Feature1.Scenario2.Identifier.Here
            </div>
            <h3 class="name">
              <span class="hidden">Scenario name:</span>
              A second scenario in the feature
            </h3>
          </header>
          <ol class="reportables">
            <li class="reportable">
              <div>
                <p class="description">
                  <strong class="performance_type">Given</strong>
                  <span class="body">Reportable content</span>
                </p>
              </div>
            </li>
          </ol>
        </li>
        <li class="scenario success" tal:condition="nothing">
          <header>
            <div class="identifier">
              <span class="hidden">Scenario ID:</span>
              Feature1.Scenario3.Identifier.Here
            </div>
            <h3 class="name">
              <span class="hidden">Scenario name:</span>
              A third scenario in the feature
            </h3>
          </header>
          <ol class="reportables">
            <li class="reportable">
              <div>
                <p class="description">
                  <strong class="performance_type">Given</strong>
                  <span class="body">Reportable content</span>
                </p>
              </div>
            </li>
          </ol>
        </li>
      </ul>
    </li>
  </ul>
</section>
<footer tal:define="timestamp csharp:report.Timestamp.ToString(&quot;T&quot;);
                    datestamp csharp:report.Timestamp.ToString(&quot;D&quot;)">
  <p>
    This report was created at
    <span tal:content="timestamp" class="timestamp">12:40:33</span>
    on
    <span class="datestamp" tal:content="datestamp">2011-03-01</span>
    using <a href="https://github.com/csf-dev/CSF.Screenplay">CSF.Screenplay</a>.
  </p>
</footer>
</body>
</html>
