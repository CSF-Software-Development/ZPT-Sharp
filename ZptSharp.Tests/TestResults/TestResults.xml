<?xml version="1.0" encoding="utf-8"?>
<test-run id="2" duration="0.7757248999999996" testcasecount="272" total="272" passed="229" failed="0" inconclusive="43" skipped="0" result="Passed" start-time="2020-11-11T 21:18:34Z" end-time="2020-11-11T 21:18:35Z">
  <test-suite type="Assembly" name="ZptSharp.Tests.dll" fullname="/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/bin/Debug/netcoreapp3.1/ZptSharp.Tests.dll" total="272" passed="229" failed="0" inconclusive="43" skipped="0" result="Passed" duration="0.7757249">
    <test-suite type="TestSuite" name="ZptSharp" fullname="ZptSharp" total="50" passed="7" failed="0" inconclusive="43" skipped="0" result="Passed" duration="0.017273">
      <test-suite type="TestFixture" name="ZptDocumentRendererTests" fullname="ZptSharp.ZptDocumentRendererTests" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.00849">
        <test-case name="RenderAsync_returns_result_from_renderer_service(auto&lt;RenderingConfig&gt;,auto&lt;IServiceProvider&gt;,auto&lt;ZptDocumentRenderer&gt;,auto&lt;Stream&gt;,auto&lt;Stream&gt;,auto&lt;Object&gt;,auto&lt;CancellationToken&gt;,auto&lt;IRendersRenderingRequest&gt;)" fullname="ZptSharp.ZptDocumentRendererTests.RenderAsync_returns_result_from_renderer_service" methodname="RenderAsync_returns_result_from_renderer_service" classname="ZptSharp.ZptDocumentRendererTests" result="Passed" duration="0.002994" asserts="0" />
        <test-case name="RenderAsync_throws_ANE_if_the_stream_is_null(auto&lt;RenderingConfig&gt;,auto&lt;ZptDocumentRenderer&gt;,auto&lt;Object&gt;,auto&lt;CancellationToken&gt;)" fullname="ZptSharp.ZptDocumentRendererTests.RenderAsync_throws_ANE_if_the_stream_is_null" methodname="RenderAsync_throws_ANE_if_the_stream_is_null" classname="ZptSharp.ZptDocumentRendererTests" result="Passed" duration="0.000406" asserts="0" />
        <test-case name="RenderAsync_uses_fallback_context_builder_if_none_provided(auto&lt;RenderingConfig&gt;,auto&lt;IServiceProvider&gt;,auto&lt;ZptDocumentRenderer&gt;,auto&lt;Stream&gt;,auto&lt;Object&gt;,auto&lt;CancellationToken&gt;,auto&lt;IRendersRenderingRequest&gt;)" fullname="ZptSharp.ZptDocumentRendererTests.RenderAsync_uses_fallback_context_builder_if_none_provided" methodname="RenderAsync_uses_fallback_context_builder_if_none_provided" classname="ZptSharp.ZptDocumentRendererTests" result="Passed" duration="0.001699" asserts="0" />
        <test-case name="RenderAsync_uses_rendering_service_from_service_provider(auto&lt;RenderingConfig&gt;,auto&lt;IServiceProvider&gt;,auto&lt;ZptDocumentRenderer&gt;,auto&lt;Stream&gt;,auto&lt;Object&gt;,auto&lt;CancellationToken&gt;,auto&lt;IRendersRenderingRequest&gt;)" fullname="ZptSharp.ZptDocumentRendererTests.RenderAsync_uses_rendering_service_from_service_provider" methodname="RenderAsync_uses_rendering_service_from_service_provider" classname="ZptSharp.ZptDocumentRendererTests" result="Passed" duration="0.003391" asserts="0" />
      </test-suite>
      <test-suite type="TestFixture" name="ZptFileRendererTests" fullname="ZptSharp.ZptFileRendererTests" total="3" passed="3" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.008783">
        <test-case name="RenderAsync_can_render_a_file_using_a_detected_reader_writer(auto&lt;RenderingConfig&gt;,auto&lt;IServiceProvider&gt;,auto&lt;ZptFileRenderer&gt;,auto&lt;IGetsDocumentReaderWriterForFile&gt;,auto&lt;IReadsAndWritesDocument&gt;,auto&lt;IGetsZptDocumentRenderer&gt;,auto&lt;IRendersZptDocument&gt;,auto&lt;Object&gt;,auto&lt;Stream&gt;)" fullname="ZptSharp.ZptFileRendererTests.RenderAsync_can_render_a_file_using_a_detected_reader_writer" methodname="RenderAsync_can_render_a_file_using_a_detected_reader_writer" classname="ZptSharp.ZptFileRendererTests" result="Passed" duration="0.006798" asserts="0" />
        <test-case name="RenderAsync_throws_file_not_found_exception_if_source_file_does_not_exist(auto&lt;ZptFileRenderer&gt;,auto&lt;Object&gt;,auto&lt;Stream&gt;)" fullname="ZptSharp.ZptFileRendererTests.RenderAsync_throws_file_not_found_exception_if_source_file_does_not_exist" methodname="RenderAsync_throws_file_not_found_exception_if_source_file_does_not_exist" classname="ZptSharp.ZptFileRendererTests" result="Passed" duration="0.000632" asserts="0" />
        <test-case name="RenderAsync_throws_no_matching_readerwriter_exception_if_one_cannot_be_inferred(auto&lt;IServiceProvider&gt;,auto&lt;ZptFileRenderer&gt;,auto&lt;IGetsDocumentReaderWriterForFile&gt;,auto&lt;IGetsZptDocumentRenderer&gt;,auto&lt;Object&gt;,auto&lt;Stream&gt;)" fullname="ZptSharp.ZptFileRendererTests.RenderAsync_throws_no_matching_readerwriter_exception_if_one_cannot_be_inferred" methodname="RenderAsync_throws_no_matching_readerwriter_exception_if_one_cannot_be_inferred" classname="ZptSharp.ZptFileRendererTests" result="Passed" duration="0.001353" asserts="0" />
      </test-suite>
      <test-suite type="TestFixture" name="ZptIntegrationTests" fullname="ZptSharp.ZptIntegrationTests" total="43" passed="0" failed="0" inconclusive="43" skipped="0" result="Passed" duration="0">
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test11.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal3.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal2.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/issue-221_form_test.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test10.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test16.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test06.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/checknotexpression.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/dtml3.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal8.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal4.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/PipeExpression.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test15.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test02.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/teeshop2.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test07.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal6.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test18.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/csharpTest2.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/stringexpression.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal9.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test03.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/csharpTest3.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/UnfamiliarCharactersTest.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test05.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/checkwithxmlheader.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/teeshop1.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal5.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/teeshoplaf.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/checknothing.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/checkpathnothing.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/attribute_html_encoding.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/csharpTest4.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test17.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/document_list.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/csharpTest.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test08.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal7.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/GarbageMarkupInJavascript.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test13.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test_metal1.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/acme_template.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
        <test-case name="Each_output_file_should_render_as_expected(&quot;/home/craig/Projects/ZPT-Sharp/ZptSharp.Tests/TestFiles/ZptIntegrationTests/ExpectedOutputs/test35.html&quot;)" fullname="ZptSharp.ZptIntegrationTests.Each_output_file_should_render_as_expected" methodname="Each_output_file_should_render_as_expected" classname="ZptSharp.ZptIntegrationTests" result="Inconclusive" duration="0" asserts="0">
          <properties>
            <property name="Explicit" value="" />
          </properties>
        </test-case>
      </test-suite>
    </test-suite>
    <test-suite type="TestSuite" name="ZptSharp" fullname="ZptSharp" total="189" passed="189" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.552799">
      <test-suite type="TestSuite" name="Dom" fullname="ZptSharp.Dom" total="46" passed="46" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.1773937">
        <test-suite type="TestFixture" name="AngleSharpDocumentProviderTests" fullname="ZptSharp.Dom.AngleSharpDocumentProviderTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.098162">
          <test-case name="GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html(auto&lt;RenderingConfig&gt;,auto&lt;AngleSharpDocumentProvider&gt;)" fullname="ZptSharp.Dom.AngleSharpDocumentProviderTests.GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html" methodname="GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html" classname="ZptSharp.Dom.AngleSharpDocumentProviderTests" result="Passed" duration="0.092511" asserts="0" />
          <test-case name="Provider_can_roundtrip_a_valid_html_document(auto&lt;RenderingConfig&gt;,auto&lt;AngleSharpDocumentProvider&gt;)" fullname="ZptSharp.Dom.AngleSharpDocumentProviderTests.Provider_can_roundtrip_a_valid_html_document" methodname="Provider_can_roundtrip_a_valid_html_document" classname="ZptSharp.Dom.AngleSharpDocumentProviderTests" result="Passed" duration="0.005651" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="AngleSharpElementTests" fullname="ZptSharp.Dom.AngleSharpElementTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.000121">
          <test-case name="Ctor_creates_the_appropriate_object_model()" fullname="ZptSharp.Dom.AngleSharpElementTests.Ctor_creates_the_appropriate_object_model" methodname="Ctor_creates_the_appropriate_object_model" classname="ZptSharp.Dom.AngleSharpElementTests" result="Passed" duration="0.000121" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="AttributeSearcherTests" fullname="ZptSharp.Dom.AttributeSearcherTests" total="3" passed="3" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.01295">
          <test-case name="SearchForAttributes_does_not_return_non_matching_attributes(auto&lt;IDocument&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;AttributeSpec&gt;,auto&lt;AttributeSearcher&gt;)" fullname="ZptSharp.Dom.AttributeSearcherTests.SearchForAttributes_does_not_return_non_matching_attributes" methodname="SearchForAttributes_does_not_return_non_matching_attributes" classname="ZptSharp.Dom.AttributeSearcherTests" result="Passed" duration="0.004486" asserts="0" />
          <test-case name="SearchForAttributes_returns_all_matching_attributes_including_from_grandchild_elements(auto&lt;IDocument&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;IAttribute&gt;,auto&lt;AttributeSpec&gt;,auto&lt;AttributeSearcher&gt;)" fullname="ZptSharp.Dom.AttributeSearcherTests.SearchForAttributes_returns_all_matching_attributes_including_from_grandchild_elements" methodname="SearchForAttributes_returns_all_matching_attributes_including_from_grandchild_elements" classname="ZptSharp.Dom.AttributeSearcherTests" result="Passed" duration="0.007778" asserts="0" />
          <test-case name="SearchForAttributes_returns_an_attribute_from_the_root_element_if_used_as_the_basis_for_search(auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;AttributeSpec&gt;,auto&lt;AttributeSearcher&gt;)" fullname="ZptSharp.Dom.AttributeSearcherTests.SearchForAttributes_returns_an_attribute_from_the_root_element_if_used_as_the_basis_for_search" methodname="SearchForAttributes_returns_an_attribute_from_the_root_element_if_used_as_the_basis_for_search" classname="ZptSharp.Dom.AttributeSearcherTests" result="Passed" duration="0.000686" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="DocumentReaderWriterBaseTests" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests" total="7" passed="7" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0096039">
          <test-case name="GetDocumentAsync_throws_ANE_if_config_is_null(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;Stream&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.GetDocumentAsync_throws_ANE_if_config_is_null" methodname="GetDocumentAsync_throws_ANE_if_config_is_null" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.00721" asserts="0" />
          <test-case name="GetDocumentAsync_throws_ANE_if_stream_is_null(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;RenderingConfig&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.GetDocumentAsync_throws_ANE_if_stream_is_null" methodname="GetDocumentAsync_throws_ANE_if_stream_is_null" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.0003579" asserts="0" />
          <test-case name="GetDocumentAsync_throws_if_operation_is_cancelled(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;Stream&gt;,auto&lt;RenderingConfig&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.GetDocumentAsync_throws_if_operation_is_cancelled" methodname="GetDocumentAsync_throws_if_operation_is_cancelled" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.000487" asserts="0" />
          <test-case name="WriteDocumentAsync_throws_ANE_if_config_is_null(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;StubDocument&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.WriteDocumentAsync_throws_ANE_if_config_is_null" methodname="WriteDocumentAsync_throws_ANE_if_config_is_null" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.000492" asserts="0" />
          <test-case name="WriteDocumentAsync_throws_ANE_if_doc_is_null(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;RenderingConfig&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.WriteDocumentAsync_throws_ANE_if_doc_is_null" methodname="WriteDocumentAsync_throws_ANE_if_doc_is_null" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.000325" asserts="0" />
          <test-case name="WriteDocumentAsync_throws_ArgEx_if_doc_is_wrong_type(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IDocument&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.WriteDocumentAsync_throws_ArgEx_if_doc_is_wrong_type" methodname="WriteDocumentAsync_throws_ArgEx_if_doc_is_wrong_type" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.000363" asserts="0" />
          <test-case name="WriteDocumentAsync_throws_if_operation_is_cancelled(auto&lt;StubDocumentReaderWriter&gt;,auto&lt;StubDocument&gt;,auto&lt;RenderingConfig&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterBaseTests.WriteDocumentAsync_throws_if_operation_is_cancelled" methodname="WriteDocumentAsync_throws_if_operation_is_cancelled" classname="ZptSharp.Dom.DocumentReaderWriterBaseTests" result="Passed" duration="0.000369" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="DocumentReaderWriterRegistryTests" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" total="6" passed="6" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0119319">
          <test-case name="GetDocumentProvider_returns_matching_readerwriter_if_it_is_present(auto&lt;DocumentReaderWriterRegistry&gt;,auto&lt;IReadsAndWritesDocument&gt;,auto&lt;IReadsAndWritesDocument&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests.GetDocumentProvider_returns_matching_readerwriter_if_it_is_present" methodname="GetDocumentProvider_returns_matching_readerwriter_if_it_is_present" classname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" result="Passed" duration="0.005388" asserts="0" />
          <test-case name="GetDocumentProvider_returns_null_if_no_matching_instances_present(auto&lt;DocumentReaderWriterRegistry&gt;,auto&lt;IReadsAndWritesDocument&gt;,auto&lt;IReadsAndWritesDocument&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests.GetDocumentProvider_returns_null_if_no_matching_instances_present" methodname="GetDocumentProvider_returns_null_if_no_matching_instances_present" classname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" result="Passed" duration="0.001074" asserts="0" />
          <test-case name="RegisterDocumentReaderWriter_adds_instance_if_it_is_not_already_present(auto&lt;DocumentReaderWriterRegistry&gt;,auto&lt;IReadsAndWritesDocument&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests.RegisterDocumentReaderWriter_adds_instance_if_it_is_not_already_present" methodname="RegisterDocumentReaderWriter_adds_instance_if_it_is_not_already_present" classname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" result="Passed" duration="0.000788" asserts="0" />
          <test-case name="RegisterDocumentReaderWriter_can_add_two_different_reader_writers(auto&lt;DocumentReaderWriterRegistry&gt;,auto&lt;IReadsAndWritesDocument&gt;,auto&lt;IReadsAndWritesDocument&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests.RegisterDocumentReaderWriter_can_add_two_different_reader_writers" methodname="RegisterDocumentReaderWriter_can_add_two_different_reader_writers" classname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" result="Passed" duration="0.0041599" asserts="0" />
          <test-case name="RegisterDocumentReaderWriter_does_not_add_anything_if_it_has_already_been_added(auto&lt;DocumentReaderWriterRegistry&gt;,auto&lt;IReadsAndWritesDocument&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests.RegisterDocumentReaderWriter_does_not_add_anything_if_it_has_already_been_added" methodname="RegisterDocumentReaderWriter_does_not_add_anything_if_it_has_already_been_added" classname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" result="Passed" duration="0.000112" asserts="0" />
          <test-case name="RegisterDocumentReaderWriter_throws_ANE_if_readerwriter_is_null(auto&lt;DocumentReaderWriterRegistry&gt;)" fullname="ZptSharp.Dom.DocumentReaderWriterRegistryTests.RegisterDocumentReaderWriter_throws_ANE_if_readerwriter_is_null" methodname="RegisterDocumentReaderWriter_throws_ANE_if_readerwriter_is_null" classname="ZptSharp.Dom.DocumentReaderWriterRegistryTests" result="Passed" duration="0.00041" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="HapDocumentProviderTests" fullname="ZptSharp.Dom.HapDocumentProviderTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.024367">
          <test-case name="GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html(auto&lt;RenderingConfig&gt;,auto&lt;HapDocumentProvider&gt;)" fullname="ZptSharp.Dom.HapDocumentProviderTests.GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html" methodname="GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html" classname="ZptSharp.Dom.HapDocumentProviderTests" result="Passed" duration="0.019733" asserts="0" />
          <test-case name="Provider_can_roundtrip_a_valid_html_document(auto&lt;RenderingConfig&gt;,auto&lt;HapDocumentProvider&gt;)" fullname="ZptSharp.Dom.HapDocumentProviderTests.Provider_can_roundtrip_a_valid_html_document" methodname="Provider_can_roundtrip_a_valid_html_document" classname="ZptSharp.Dom.HapDocumentProviderTests" result="Passed" duration="0.004634" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="NamespaceTests" fullname="ZptSharp.Dom.NamespaceTests" total="23" passed="23" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.012346">
          <test-case name="Equals_returns_false_for_a_namespace_with_a_different_uri()" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_a_namespace_with_a_different_uri" methodname="Equals_returns_false_for_a_namespace_with_a_different_uri" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.001228" asserts="0" />
          <test-case name="Equals_returns_false_for_a_namespace_with_a_different_uri_even_when_prefixes_are_the_same(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_a_namespace_with_a_different_uri_even_when_prefixes_are_the_same" methodname="Equals_returns_false_for_a_namespace_with_a_different_uri_even_when_prefixes_are_the_same" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000189" asserts="0" />
          <test-case name="Equals_returns_false_for_a_namespace_with_a_null_uri_if_the_first_namespace_uri_is_not_null(auto&lt;String&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_a_namespace_with_a_null_uri_if_the_first_namespace_uri_is_not_null" methodname="Equals_returns_false_for_a_namespace_with_a_null_uri_if_the_first_namespace_uri_is_not_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000164" asserts="0" />
          <test-case name="Equals_returns_false_for_a_namespace_with_a_uri_if_the_first_namespace_uri_is_null(auto&lt;String&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_a_namespace_with_a_uri_if_the_first_namespace_uri_is_null" methodname="Equals_returns_false_for_a_namespace_with_a_uri_if_the_first_namespace_uri_is_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000168" asserts="0" />
          <test-case name="Equals_returns_false_for_a_namespace_with_different_prefixes_if_uris_are_both_null()" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_a_namespace_with_different_prefixes_if_uris_are_both_null" methodname="Equals_returns_false_for_a_namespace_with_different_prefixes_if_uris_are_both_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000186" asserts="0" />
          <test-case name="Equals_returns_false_for_an_unrelated_object(auto&lt;Object&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_an_unrelated_object" methodname="Equals_returns_false_for_an_unrelated_object" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000191" asserts="0" />
          <test-case name="Equals_returns_false_for_null(auto&lt;String&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_false_for_null" methodname="Equals_returns_false_for_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.00016" asserts="0" />
          <test-case name="Equals_returns_true_for_a_namespace_with_null_prefixes_if_uris_are_both_null()" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_true_for_a_namespace_with_null_prefixes_if_uris_are_both_null" methodname="Equals_returns_true_for_a_namespace_with_null_prefixes_if_uris_are_both_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.00032" asserts="0" />
          <test-case name="Equals_returns_true_for_a_namespace_with_the_same_prefix_if_uris_are_both_null(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_true_for_a_namespace_with_the_same_prefix_if_uris_are_both_null" methodname="Equals_returns_true_for_a_namespace_with_the_same_prefix_if_uris_are_both_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000176" asserts="0" />
          <test-case name="Equals_returns_true_for_a_namespace_with_the_same_uri_regardless_of_prefix(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_true_for_a_namespace_with_the_same_uri_regardless_of_prefix" methodname="Equals_returns_true_for_a_namespace_with_the_same_uri_regardless_of_prefix" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.00018" asserts="0" />
          <test-case name="Equals_returns_true_for_itself(auto&lt;String&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Equals_returns_true_for_itself" methodname="Equals_returns_true_for_itself" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.00016" asserts="0" />
          <test-case name="GetHashCode_returns_hash_code_of_prefix_if_uri_is_null_but_prefix_is_set(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.GetHashCode_returns_hash_code_of_prefix_if_uri_is_null_but_prefix_is_set" methodname="GetHashCode_returns_hash_code_of_prefix_if_uri_is_null_but_prefix_is_set" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.007149" asserts="0" />
          <test-case name="GetHashCode_returns_hash_code_of_uri_if_both_uri_and_prefix_are_set(auto&lt;String&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.GetHashCode_returns_hash_code_of_uri_if_both_uri_and_prefix_are_set" methodname="GetHashCode_returns_hash_code_of_uri_if_both_uri_and_prefix_are_set" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.0002" asserts="0" />
          <test-case name="GetHashCode_returns_hash_code_of_uri_if_it_is_set(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.GetHashCode_returns_hash_code_of_uri_if_it_is_set" methodname="GetHashCode_returns_hash_code_of_uri_if_it_is_set" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000183" asserts="0" />
          <test-case name="GetHashCode_returns_zero_if_both_prefix_and_uri_are_null()" fullname="ZptSharp.Dom.NamespaceTests.GetHashCode_returns_zero_if_both_prefix_and_uri_are_null" methodname="GetHashCode_returns_zero_if_both_prefix_and_uri_are_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000224" asserts="0" />
          <test-case name="Operator_equals_returns_false_if_namespaces_are_not_equal()" fullname="ZptSharp.Dom.NamespaceTests.Operator_equals_returns_false_if_namespaces_are_not_equal" methodname="Operator_equals_returns_false_if_namespaces_are_not_equal" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.00022" asserts="0" />
          <test-case name="Operator_equals_returns_true_if_namespaces_are_equal(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Operator_equals_returns_true_if_namespaces_are_equal" methodname="Operator_equals_returns_true_if_namespaces_are_equal" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000167" asserts="0" />
          <test-case name="Operator_notequals_returns_false_if_namespaces_are_equal(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.Operator_notequals_returns_false_if_namespaces_are_equal" methodname="Operator_notequals_returns_false_if_namespaces_are_equal" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000187" asserts="0" />
          <test-case name="Operator_notequals_returns_true_if_namespaces_are_not_equal()" fullname="ZptSharp.Dom.NamespaceTests.Operator_notequals_returns_true_if_namespaces_are_not_equal" methodname="Operator_notequals_returns_true_if_namespaces_are_not_equal" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000161" asserts="0" />
          <test-case name="ToString_returns_empty_string_if_both_prefix_and_uri_are_null()" fullname="ZptSharp.Dom.NamespaceTests.ToString_returns_empty_string_if_both_prefix_and_uri_are_null" methodname="ToString_returns_empty_string_if_both_prefix_and_uri_are_null" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000255" asserts="0" />
          <test-case name="ToString_returns_prefix_and_uri_if_both_are_set()" fullname="ZptSharp.Dom.NamespaceTests.ToString_returns_prefix_and_uri_if_both_are_set" methodname="ToString_returns_prefix_and_uri_if_both_are_set" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000168" asserts="0" />
          <test-case name="ToString_returns_prefix_if_uri_is_null_but_prefix_is_set(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.ToString_returns_prefix_if_uri_is_null_but_prefix_is_set" methodname="ToString_returns_prefix_if_uri_is_null_but_prefix_is_set" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000156" asserts="0" />
          <test-case name="ToString_returns_uri_if_it_is_set(auto&lt;String&gt;)" fullname="ZptSharp.Dom.NamespaceTests.ToString_returns_uri_if_it_is_set" methodname="ToString_returns_uri_if_it_is_set" classname="ZptSharp.Dom.NamespaceTests" result="Passed" duration="0.000154" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="XmlDocumentProviderTests" fullname="ZptSharp.Dom.XmlDocumentProviderTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0079119">
          <test-case name="GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html(auto&lt;RenderingConfig&gt;,auto&lt;XmlDocumentProvider&gt;)" fullname="ZptSharp.Dom.XmlDocumentProviderTests.GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html" methodname="GetDocumentAsync_returns_instance_of_correct_type_when_parsing_html" classname="ZptSharp.Dom.XmlDocumentProviderTests" result="Passed" duration="0.003641" asserts="0" />
          <test-case name="Provider_can_roundtrip_a_valid_html_document(auto&lt;RenderingConfig&gt;,auto&lt;XmlDocumentProvider&gt;)" fullname="ZptSharp.Dom.XmlDocumentProviderTests.Provider_can_roundtrip_a_valid_html_document" methodname="Provider_can_roundtrip_a_valid_html_document" classname="ZptSharp.Dom.XmlDocumentProviderTests" result="Passed" duration="0.0042709" asserts="0" />
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" name="Expressions" fullname="ZptSharp.Expressions" total="56" passed="56" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0669747">
        <test-suite type="TestFixture" name="BuiltinContextsProviderFactoryTests" fullname="ZptSharp.Expressions.BuiltinContextsProviderFactoryTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.006391">
          <test-case name="GetBuiltinContextsProvider_creates_instance_if_not_available_on_config(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;BuiltinContextsProviderFactory&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderFactoryTests.GetBuiltinContextsProvider_creates_instance_if_not_available_on_config" methodname="GetBuiltinContextsProvider_creates_instance_if_not_available_on_config" classname="ZptSharp.Expressions.BuiltinContextsProviderFactoryTests" result="Passed" duration="0.003518" asserts="0" />
          <test-case name="GetBuiltinContextsProvider_returns_context_from_config_it_exists_there(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;BuiltinContextsProviderFactory&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderFactoryTests.GetBuiltinContextsProvider_returns_context_from_config_it_exists_there" methodname="GetBuiltinContextsProvider_returns_context_from_config_it_exists_there" classname="ZptSharp.Expressions.BuiltinContextsProviderFactoryTests" result="Passed" duration="0.002873" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="BuiltinContextsProviderTests" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests" total="8" passed="8" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.011426">
          <test-case name="TryGetValueAsync_returns_cancellation_token_when_default_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_cancellation_token_when_default_requested" methodname="TryGetValueAsync_returns_cancellation_token_when_default_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.001523" asserts="0" />
          <test-case name="TryGetValueAsync_returns_directory_info_when_container_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;IDocument&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_directory_info_when_container_requested" methodname="TryGetValueAsync_returns_directory_info_when_container_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.002576" asserts="0" />
          <test-case name="TryGetValueAsync_returns_element_attributes_collection_when_attributes_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_element_attributes_collection_when_attributes_requested" methodname="TryGetValueAsync_returns_element_attributes_collection_when_attributes_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.003342" asserts="0" />
          <test-case name="TryGetValueAsync_returns_model_when_here_requested(auto&lt;Object&gt;,auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_model_when_here_requested" methodname="TryGetValueAsync_returns_model_when_here_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.000509" asserts="0" />
          <test-case name="TryGetValueAsync_returns_null_when_nothing_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_null_when_nothing_requested" methodname="TryGetValueAsync_returns_null_when_nothing_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.000473" asserts="0" />
          <test-case name="TryGetValueAsync_returns_options_dictionary_when_options_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;Dictionary`2&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_options_dictionary_when_options_requested" methodname="TryGetValueAsync_returns_options_dictionary_when_options_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.001038" asserts="0" />
          <test-case name="TryGetValueAsync_returns_repetitions_dictionary_when_repeat_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_repetitions_dictionary_when_repeat_requested" methodname="TryGetValueAsync_returns_repetitions_dictionary_when_repeat_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.000475" asserts="0" />
          <test-case name="TryGetValueAsync_returns_template_object_when_template_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsMetalDocumentAdapter&gt;,auto&lt;IDocument&gt;,auto&lt;BuiltinContextsProvider&gt;)" fullname="ZptSharp.Expressions.BuiltinContextsProviderTests.TryGetValueAsync_returns_template_object_when_template_requested" methodname="TryGetValueAsync_returns_template_object_when_template_requested" classname="ZptSharp.Expressions.BuiltinContextsProviderTests" result="Passed" duration="0.00149" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="DefaultPathExpressionDecoratorTests" fullname="ZptSharp.Expressions.DefaultPathExpressionDecoratorTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.002118">
          <test-case name="GetExpressionType_returns_path_if_wrapped_result_is_null(auto&lt;IGetsExpressionType&gt;,auto&lt;DefaultPathExpressionDecorator&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.DefaultPathExpressionDecoratorTests.GetExpressionType_returns_path_if_wrapped_result_is_null" methodname="GetExpressionType_returns_path_if_wrapped_result_is_null" classname="ZptSharp.Expressions.DefaultPathExpressionDecoratorTests" result="Passed" duration="0.001516" asserts="0" />
          <test-case name="GetExpressionType_returns_wrapped_result_if_it_is_not_null(auto&lt;IGetsExpressionType&gt;,auto&lt;DefaultPathExpressionDecorator&gt;,auto&lt;String&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.DefaultPathExpressionDecoratorTests.GetExpressionType_returns_wrapped_result_if_it_is_not_null" methodname="GetExpressionType_returns_wrapped_result_if_it_is_not_null" classname="ZptSharp.Expressions.DefaultPathExpressionDecoratorTests" result="Passed" duration="0.000602" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="EvaluatorTypeRegistryTests" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" total="17" passed="17" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0072768">
          <test-case name="GetEvaluatorType_gets_type_of_evaluator_using_resolver_if_it_is_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;,auto&lt;StubEvaluator&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.GetEvaluatorType_gets_type_of_evaluator_using_resolver_if_it_is_registered" methodname="GetEvaluatorType_gets_type_of_evaluator_using_resolver_if_it_is_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.001029" asserts="0" />
          <test-case name="GetEvaluatorType_throws_ANE_if_expression_type_is_null(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.GetEvaluatorType_throws_ANE_if_expression_type_is_null" methodname="GetEvaluatorType_throws_ANE_if_expression_type_is_null" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000371" asserts="0" />
          <test-case name="GetEvaluatorType_throws_if_expression_type_is_not_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.GetEvaluatorType_throws_if_expression_type_is_not_registered" methodname="GetEvaluatorType_throws_if_expression_type_is_not_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000994" asserts="0" />
          <test-case name="GetRegisteredExpressionTypes_gets_correct_list_of_expression_types(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.GetRegisteredExpressionTypes_gets_correct_list_of_expression_types" methodname="GetRegisteredExpressionTypes_gets_correct_list_of_expression_types" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.00041" asserts="0" />
          <test-case name="IsRegistered_returns_false_after_expression_type_is_unregistered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.IsRegistered_returns_false_after_expression_type_is_unregistered" methodname="IsRegistered_returns_false_after_expression_type_is_unregistered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000328" asserts="0" />
          <test-case name="IsRegistered_returns_false_if_not_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.IsRegistered_returns_false_if_not_registered" methodname="IsRegistered_returns_false_if_not_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000165" asserts="0" />
          <test-case name="IsRegistered_returns_true_if_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.IsRegistered_returns_true_if_registered" methodname="IsRegistered_returns_true_if_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000167" asserts="0" />
          <test-case name="IsRegistered_throws_ANE_if_expression_type_is_null(auto&lt;EvaluatorTypeRegistry&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.IsRegistered_throws_ANE_if_expression_type_is_null" methodname="IsRegistered_throws_ANE_if_expression_type_is_null" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000327" asserts="0" />
          <test-case name="RegisterEvaluatorType_does_not_throw_if_an_expression_type_is_registered_once(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.RegisterEvaluatorType_does_not_throw_if_an_expression_type_is_registered_once" methodname="RegisterEvaluatorType_does_not_throw_if_an_expression_type_is_registered_once" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.00037" asserts="0" />
          <test-case name="RegisterEvaluatorType_throws_ANE_if_evaluator_type_is_null(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.RegisterEvaluatorType_throws_ANE_if_evaluator_type_is_null" methodname="RegisterEvaluatorType_throws_ANE_if_evaluator_type_is_null" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000317" asserts="0" />
          <test-case name="RegisterEvaluatorType_throws_if_evaluator_type_is_wrong_impl_type(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.RegisterEvaluatorType_throws_if_evaluator_type_is_wrong_impl_type" methodname="RegisterEvaluatorType_throws_if_evaluator_type_is_wrong_impl_type" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000378" asserts="0" />
          <test-case name="RegisterEvaluatorType_throws_if_expression_type_is_already_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.RegisterEvaluatorType_throws_if_expression_type_is_already_registered" methodname="RegisterEvaluatorType_throws_if_expression_type_is_already_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000379" asserts="0" />
          <test-case name="RegisterEvaluatorType_throws_if_expression_type_is_empty_string(auto&lt;EvaluatorTypeRegistry&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.RegisterEvaluatorType_throws_if_expression_type_is_empty_string" methodname="RegisterEvaluatorType_throws_if_expression_type_is_empty_string" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.0003579" asserts="0" />
          <test-case name="RegisterEvaluatorType_throws_if_expression_type_is_null(auto&lt;EvaluatorTypeRegistry&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.RegisterEvaluatorType_throws_if_expression_type_is_null" methodname="RegisterEvaluatorType_throws_if_expression_type_is_null" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000293" asserts="0" />
          <test-case name="Unregister_returns_false_if_not_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.Unregister_returns_false_if_not_registered" methodname="Unregister_returns_false_if_not_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.000167" asserts="0" />
          <test-case name="Unregister_returns_true_if_registered(auto&lt;EvaluatorTypeRegistry&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.Unregister_returns_true_if_registered" methodname="Unregister_returns_true_if_registered" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.0001689" asserts="0" />
          <test-case name="Unregister_throws_ANE_if_expression_type_is_null(auto&lt;EvaluatorTypeRegistry&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeRegistryTests.Unregister_throws_ANE_if_expression_type_is_null" methodname="Unregister_throws_ANE_if_expression_type_is_null" classname="ZptSharp.Expressions.EvaluatorTypeRegistryTests" result="Passed" duration="0.001055" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="EvaluatorTypeResolverTests" fullname="ZptSharp.Expressions.EvaluatorTypeResolverTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.003139">
          <test-case name="GetEvaluator_returns_instance_resolved_using_resolver_and_registry(auto&lt;IRegistersExpressionEvaluator&gt;,auto&lt;IServiceProvider&gt;,auto&lt;EvaluatorTypeResolver&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.EvaluatorTypeResolverTests.GetEvaluator_returns_instance_resolved_using_resolver_and_registry" methodname="GetEvaluator_returns_instance_resolved_using_resolver_and_registry" classname="ZptSharp.Expressions.EvaluatorTypeResolverTests" result="Passed" duration="0.003139" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ExpressionContextTests" fullname="ZptSharp.Expressions.ExpressionContextTests" total="8" passed="8" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.002756">
          <test-case name="Constructor_should_clone_local_definitions(auto&lt;IElement&gt;,auto&lt;IDictionary`2&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.Constructor_should_clone_local_definitions" methodname="Constructor_should_clone_local_definitions" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000832" asserts="0" />
          <test-case name="Constructor_should_clone_repetition_info(auto&lt;IElement&gt;,auto&lt;IDictionary`2&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.Constructor_should_clone_repetition_info" methodname="Constructor_should_clone_repetition_info" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000443" asserts="0" />
          <test-case name="Constructor_should_use_same_collection_for_global_definitions(auto&lt;IElement&gt;,auto&lt;IDictionary`2&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.Constructor_should_use_same_collection_for_global_definitions" methodname="Constructor_should_use_same_collection_for_global_definitions" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000149" asserts="0" />
          <test-case name="Constructor_throws_ANE_if_element_is_null()" fullname="ZptSharp.Expressions.ExpressionContextTests.Constructor_throws_ANE_if_element_is_null" methodname="Constructor_throws_ANE_if_element_is_null" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000453" asserts="0" />
          <test-case name="CreateChild_should_clone_local_definitions(auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.CreateChild_should_clone_local_definitions" methodname="CreateChild_should_clone_local_definitions" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000292" asserts="0" />
          <test-case name="CreateChild_should_clone_repetition_info(auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.CreateChild_should_clone_repetition_info" methodname="CreateChild_should_clone_repetition_info" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000153" asserts="0" />
          <test-case name="CreateChild_should_use_same_collection_for_global_definitions(auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.CreateChild_should_use_same_collection_for_global_definitions" methodname="CreateChild_should_use_same_collection_for_global_definitions" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000102" asserts="0" />
          <test-case name="CreateChild_throws_ANE_if_element_is_null(auto&lt;ExpressionContext&gt;)" fullname="ZptSharp.Expressions.ExpressionContextTests.CreateChild_throws_ANE_if_element_is_null" methodname="CreateChild_throws_ANE_if_element_is_null" classname="ZptSharp.Expressions.ExpressionContextTests" result="Passed" duration="0.000332" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ExpressionEvaluatorExtensionsTests" fullname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests" total="3" passed="3" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.009743">
          <test-case name="EvaluateExpressionAsync_throws_ANE_if_evaluator_is_null(auto&lt;String&gt;,auto&lt;ExpressionContext&gt;)" fullname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests.EvaluateExpressionAsync_throws_ANE_if_evaluator_is_null" methodname="EvaluateExpressionAsync_throws_ANE_if_evaluator_is_null" classname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests" result="Passed" duration="0.00058" asserts="0" />
          <test-case name="EvaluateExpressionAsync_throws_EvaluationException_if_result_is_wrong_type(auto&lt;IEvaluatesExpression&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;Int32&gt;)" fullname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests.EvaluateExpressionAsync_throws_EvaluationException_if_result_is_wrong_type" methodname="EvaluateExpressionAsync_throws_EvaluationException_if_result_is_wrong_type" classname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests" result="Passed" duration="0.007772" asserts="0" />
          <test-case name="EvaluateExpressionAsync_uses_evaluator_to_resolve_expression(auto&lt;IEvaluatesExpression&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests.EvaluateExpressionAsync_uses_evaluator_to_resolve_expression" methodname="EvaluateExpressionAsync_uses_evaluator_to_resolve_expression" classname="ZptSharp.Expressions.ExpressionEvaluatorExtensionsTests" result="Passed" duration="0.001391" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="NamedTalesValueForExpressionContextAdapterTests" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" total="7" passed="7" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.010538">
          <test-case name="TryGetValueAsync_returns_built_in_context_if_contexts_requested(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsBuiltinContextsProvider&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_built_in_context_if_contexts_requested" methodname="TryGetValueAsync_returns_built_in_context_if_contexts_requested" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.003213" asserts="0" />
          <test-case name="TryGetValueAsync_returns_built_in_context_if_contexts_requested_even_if_there_is_a_local_variable(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsBuiltinContextsProvider&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;Object&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_built_in_context_if_contexts_requested_even_if_there_is_a_local_variable" methodname="TryGetValueAsync_returns_built_in_context_if_contexts_requested_even_if_there_is_a_local_variable" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.001231" asserts="0" />
          <test-case name="TryGetValueAsync_returns_value_from_built_in_context_if_no_local_or_global_variable(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;IGetsBuiltinContextsProvider&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_value_from_built_in_context_if_no_local_or_global_variable" methodname="TryGetValueAsync_returns_value_from_built_in_context_if_no_local_or_global_variable" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.00237" asserts="0" />
          <test-case name="TryGetValueAsync_returns_value_from_global_variable_if_it_exists(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_value_from_global_variable_if_it_exists" methodname="TryGetValueAsync_returns_value_from_global_variable_if_it_exists" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.001078" asserts="0" />
          <test-case name="TryGetValueAsync_returns_value_from_global_variable_over_built_in_context_in_case_of_naming_collision(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;IGetsBuiltinContextsProvider&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;Object&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_value_from_global_variable_over_built_in_context_in_case_of_naming_collision" methodname="TryGetValueAsync_returns_value_from_global_variable_over_built_in_context_in_case_of_naming_collision" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.001689" asserts="0" />
          <test-case name="TryGetValueAsync_returns_value_from_local_variable_if_it_exists(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_value_from_local_variable_if_it_exists" methodname="TryGetValueAsync_returns_value_from_local_variable_if_it_exists" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.00048" asserts="0" />
          <test-case name="TryGetValueAsync_returns_value_from_local_variable_over_global_in_case_of_naming_collision(auto&lt;ExpressionContext&gt;,auto&lt;RenderingConfig&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;Object&gt;,auto&lt;NamedTalesValueForExpressionContextAdapter&gt;)" fullname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests.TryGetValueAsync_returns_value_from_local_variable_over_global_in_case_of_naming_collision" methodname="TryGetValueAsync_returns_value_from_local_variable_over_global_in_case_of_naming_collision" classname="ZptSharp.Expressions.NamedTalesValueForExpressionContextAdapterTests" result="Passed" duration="0.000477" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="PrefixExpressionTypeProviderTests" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" total="7" passed="7" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0096199">
          <test-case name="GetExpressionType_returns_foobar_for_a_foobar_expression(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionType_returns_foobar_for_a_foobar_expression" methodname="GetExpressionType_returns_foobar_for_a_foobar_expression" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.007384" asserts="0" />
          <test-case name="GetExpressionType_returns_null_for_an_empty_string_expression(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionType_returns_null_for_an_empty_string_expression" methodname="GetExpressionType_returns_null_for_an_empty_string_expression" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.000187" asserts="0" />
          <test-case name="GetExpressionType_returns_null_for_an_expression_with_no_prefix(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionType_returns_null_for_an_expression_with_no_prefix" methodname="GetExpressionType_returns_null_for_an_expression_with_no_prefix" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.000876" asserts="0" />
          <test-case name="GetExpressionType_throws_ANE_for_a_null_expression(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionType_throws_ANE_for_a_null_expression" methodname="GetExpressionType_throws_ANE_for_a_null_expression" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.0003379" asserts="0" />
          <test-case name="GetExpressionWithoutPrefix_returns_an_expression_with_prefix_removed(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionWithoutPrefix_returns_an_expression_with_prefix_removed" methodname="GetExpressionWithoutPrefix_returns_an_expression_with_prefix_removed" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.000318" asserts="0" />
          <test-case name="GetExpressionWithoutPrefix_the_same_expression_if_it_has_no_prefix(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionWithoutPrefix_the_same_expression_if_it_has_no_prefix" methodname="GetExpressionWithoutPrefix_the_same_expression_if_it_has_no_prefix" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.000209" asserts="0" />
          <test-case name="GetExpressionWithoutPrefix_throws_ANE_for_a_null_expression(auto&lt;PrefixExpressionTypeProvider&gt;)" fullname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests.GetExpressionWithoutPrefix_throws_ANE_for_a_null_expression" methodname="GetExpressionWithoutPrefix_throws_ANE_for_a_null_expression" classname="ZptSharp.Expressions.PrefixExpressionTypeProviderTests" result="Passed" duration="0.000308" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="RegistryBasedExpressionEvaluatorTests" fullname="ZptSharp.Expressions.RegistryBasedExpressionEvaluatorTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.003967">
          <test-case name="EvaluateExpressionAsync_returns_result_from_resolved_evaluator(auto&lt;IGetsExpressionType&gt;,auto&lt;IGetsEvaluatorForExpressionType&gt;,auto&lt;IRemovesPrefixFromExpression&gt;,auto&lt;RegistryBasedExpressionEvaluator&gt;,auto&lt;String&gt;,auto&lt;String&gt;,auto&lt;String&gt;,auto&lt;IEvaluatesExpression&gt;,auto&lt;Object&gt;,auto&lt;ExpressionContext&gt;)" fullname="ZptSharp.Expressions.RegistryBasedExpressionEvaluatorTests.EvaluateExpressionAsync_returns_result_from_resolved_evaluator" methodname="EvaluateExpressionAsync_returns_result_from_resolved_evaluator" classname="ZptSharp.Expressions.RegistryBasedExpressionEvaluatorTests" result="Passed" duration="0.003967" asserts="0" />
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" name="Metal" fullname="ZptSharp.Metal" total="34" passed="34" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.1292708">
        <test-suite type="TestFixture" name="AddDefinedMacroToGlobalScopeProcessorDecoratorTests" fullname="ZptSharp.Metal.AddDefinedMacroToGlobalScopeProcessorDecoratorTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.010099">
          <test-case name="ProcessContextAsync_adds_to_global_context_if_element_has_define_macro_attribute(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;AddDefinedMacroToGlobalScopeProcessorDecorator&gt;,auto&lt;AttributeSpec&gt;,auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Metal.AddDefinedMacroToGlobalScopeProcessorDecoratorTests.ProcessContextAsync_adds_to_global_context_if_element_has_define_macro_attribute" methodname="ProcessContextAsync_adds_to_global_context_if_element_has_define_macro_attribute" classname="ZptSharp.Metal.AddDefinedMacroToGlobalScopeProcessorDecoratorTests" result="Passed" duration="0.008718" asserts="0" />
          <test-case name="ProcessContextAsync_does_not_add_to_global_context_if_element_has_no_define_macro_attribute(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;AddDefinedMacroToGlobalScopeProcessorDecorator&gt;,auto&lt;AttributeSpec&gt;,auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;)" fullname="ZptSharp.Metal.AddDefinedMacroToGlobalScopeProcessorDecoratorTests.ProcessContextAsync_does_not_add_to_global_context_if_element_has_no_define_macro_attribute" methodname="ProcessContextAsync_does_not_add_to_global_context_if_element_has_no_define_macro_attribute" classname="ZptSharp.Metal.AddDefinedMacroToGlobalScopeProcessorDecoratorTests" result="Passed" duration="0.001381" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MacroExpanderTests" fullname="ZptSharp.Metal.MacroExpanderTests" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.060375">
          <test-case name="ExpandMacroAsync_fills_mixture_of_slots_in_extended_macro_defined_in_extender_and_used_macro(auto&lt;IGetsMacro&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IGetsSlots&gt;,auto&lt;IFillsSlots&gt;,auto&lt;MacroExpander&gt;,auto&lt;MetalMacro&gt;,auto&lt;MetalMacro&gt;,auto&lt;ExpressionContext&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;)" fullname="ZptSharp.Metal.MacroExpanderTests.ExpandMacroAsync_fills_mixture_of_slots_in_extended_macro_defined_in_extender_and_used_macro" methodname="ExpandMacroAsync_fills_mixture_of_slots_in_extended_macro_defined_in_extender_and_used_macro" classname="ZptSharp.Metal.MacroExpanderTests" result="Passed" duration="0.028784" asserts="0" />
          <test-case name="ExpandMacroAsync_fills_slots_and_does_nothing_more_for_a_macro_which_does_not_extend_another(auto&lt;IGetsMacro&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IGetsSlots&gt;,auto&lt;IFillsSlots&gt;,auto&lt;MacroExpander&gt;,auto&lt;MetalMacro&gt;,auto&lt;ExpressionContext&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;)" fullname="ZptSharp.Metal.MacroExpanderTests.ExpandMacroAsync_fills_slots_and_does_nothing_more_for_a_macro_which_does_not_extend_another" methodname="ExpandMacroAsync_fills_slots_and_does_nothing_more_for_a_macro_which_does_not_extend_another" classname="ZptSharp.Metal.MacroExpanderTests" result="Passed" duration="0.003927" asserts="0" />
          <test-case name="ExpandMacroAsync_fills_slots_in_extended_macro_defined_in_extender(auto&lt;IGetsMacro&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IGetsSlots&gt;,auto&lt;IFillsSlots&gt;,auto&lt;MacroExpander&gt;,auto&lt;MetalMacro&gt;,auto&lt;MetalMacro&gt;,auto&lt;ExpressionContext&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;,auto&lt;Slot&gt;)" fullname="ZptSharp.Metal.MacroExpanderTests.ExpandMacroAsync_fills_slots_in_extended_macro_defined_in_extender" methodname="ExpandMacroAsync_fills_slots_in_extended_macro_defined_in_extender" classname="ZptSharp.Metal.MacroExpanderTests" result="Passed" duration="0.011268" asserts="0" />
          <test-case name="ExpandMacroAsync_uses_filler_defined_at_parent_level_over_filler_at_child_level_if_slot_not_redefined(auto&lt;IGetsMacro&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IGetsSlots&gt;,auto&lt;IFillsSlots&gt;,auto&lt;MacroExpander&gt;,auto&lt;MetalMacro&gt;,auto&lt;MetalMacro&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Metal.MacroExpanderTests.ExpandMacroAsync_uses_filler_defined_at_parent_level_over_filler_at_child_level_if_slot_not_redefined" methodname="ExpandMacroAsync_uses_filler_defined_at_parent_level_over_filler_at_child_level_if_slot_not_redefined" classname="ZptSharp.Metal.MacroExpanderTests" result="Passed" duration="0.016396" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MacroProviderTests" fullname="ZptSharp.Metal.MacroProviderTests" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0097378">
          <test-case name="GetMacroAsync_returns_macro_from_expression_if_it_exists(auto&lt;IEvaluatesExpression&gt;,auto&lt;MacroProvider&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;AttributeSpec&gt;,auto&lt;MetalMacro&gt;)" fullname="ZptSharp.Metal.MacroProviderTests.GetMacroAsync_returns_macro_from_expression_if_it_exists" methodname="GetMacroAsync_returns_macro_from_expression_if_it_exists" classname="ZptSharp.Metal.MacroProviderTests" result="Passed" duration="0.003065" asserts="0" />
          <test-case name="GetMacroAsync_returns_null_if_no_attribute_matches_spec(auto&lt;MacroProvider&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;ExpressionContext&gt;,auto&lt;AttributeSpec&gt;)" fullname="ZptSharp.Metal.MacroProviderTests.GetMacroAsync_returns_null_if_no_attribute_matches_spec" methodname="GetMacroAsync_returns_null_if_no_attribute_matches_spec" classname="ZptSharp.Metal.MacroProviderTests" result="Passed" duration="0.0010889" asserts="0" />
          <test-case name="GetMacroAsync_throws_MacroNotFoundException_if_evaluator_throws(auto&lt;IEvaluatesExpression&gt;,auto&lt;MacroProvider&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;AttributeSpec&gt;)" fullname="ZptSharp.Metal.MacroProviderTests.GetMacroAsync_throws_MacroNotFoundException_if_evaluator_throws" methodname="GetMacroAsync_throws_MacroNotFoundException_if_evaluator_throws" classname="ZptSharp.Metal.MacroProviderTests" result="Passed" duration="0.003478" asserts="0" />
          <test-case name="GetMacroAsync_throws_MacroNotFoundException_if_macro_is_null(auto&lt;IEvaluatesExpression&gt;,auto&lt;MacroProvider&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;AttributeSpec&gt;)" fullname="ZptSharp.Metal.MacroProviderTests.GetMacroAsync_throws_MacroNotFoundException_if_macro_is_null" methodname="GetMacroAsync_throws_MacroNotFoundException_if_macro_is_null" classname="ZptSharp.Metal.MacroProviderTests" result="Passed" duration="0.0021059" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MacroUsageContextProcessorTests" fullname="ZptSharp.Metal.MacroUsageContextProcessorTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.008641">
          <test-case name="ProcessContextAsync_does_not_replace_element_if_no_use_macro_attribute(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IGetsMacro&gt;,auto&lt;MacroUsageContextProcessor&gt;,auto&lt;AttributeSpec&gt;,auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Metal.MacroUsageContextProcessorTests.ProcessContextAsync_does_not_replace_element_if_no_use_macro_attribute" methodname="ProcessContextAsync_does_not_replace_element_if_no_use_macro_attribute" classname="ZptSharp.Metal.MacroUsageContextProcessorTests" result="Passed" duration="0.004308" asserts="0" />
          <test-case name="ProcessContextAsync_replaces_element_in_context_with_expanded_macro(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IGetsMacro&gt;,auto&lt;IExpandsMacro&gt;,auto&lt;MacroUsageContextProcessor&gt;,auto&lt;MetalMacro&gt;,auto&lt;MetalMacro&gt;,auto&lt;AttributeSpec&gt;,auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;String&gt;)" fullname="ZptSharp.Metal.MacroUsageContextProcessorTests.ProcessContextAsync_replaces_element_in_context_with_expanded_macro" methodname="ProcessContextAsync_replaces_element_in_context_with_expanded_macro" classname="ZptSharp.Metal.MacroUsageContextProcessorTests" result="Passed" duration="0.004333" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MetalAttributeSpecProviderTests" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests" total="10" passed="10" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.004083">
          <test-case name="DefineMacro_returns_instance_with_correct_local_name(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.DefineMacro_returns_instance_with_correct_local_name" methodname="DefineMacro_returns_instance_with_correct_local_name" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.001116" asserts="0" />
          <test-case name="DefineMacro_returns_instance_with_correct_namespace(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.DefineMacro_returns_instance_with_correct_namespace" methodname="DefineMacro_returns_instance_with_correct_namespace" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.00051" asserts="0" />
          <test-case name="DefineSlot_returns_instance_with_correct_local_name(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.DefineSlot_returns_instance_with_correct_local_name" methodname="DefineSlot_returns_instance_with_correct_local_name" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000347" asserts="0" />
          <test-case name="DefineSlot_returns_instance_with_correct_namespace(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.DefineSlot_returns_instance_with_correct_namespace" methodname="DefineSlot_returns_instance_with_correct_namespace" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000273" asserts="0" />
          <test-case name="ExtendMacro_returns_instance_with_correct_local_name(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.ExtendMacro_returns_instance_with_correct_local_name" methodname="ExtendMacro_returns_instance_with_correct_local_name" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.00033" asserts="0" />
          <test-case name="ExtendMacro_returns_instance_with_correct_namespace(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.ExtendMacro_returns_instance_with_correct_namespace" methodname="ExtendMacro_returns_instance_with_correct_namespace" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000278" asserts="0" />
          <test-case name="FillSlot_returns_instance_with_correct_local_name(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.FillSlot_returns_instance_with_correct_local_name" methodname="FillSlot_returns_instance_with_correct_local_name" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000328" asserts="0" />
          <test-case name="FillSlot_returns_instance_with_correct_namespace(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.FillSlot_returns_instance_with_correct_namespace" methodname="FillSlot_returns_instance_with_correct_namespace" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000277" asserts="0" />
          <test-case name="UseMacro_returns_instance_with_correct_local_name(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.UseMacro_returns_instance_with_correct_local_name" methodname="UseMacro_returns_instance_with_correct_local_name" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000337" asserts="0" />
          <test-case name="UseMacro_returns_instance_with_correct_namespace(auto&lt;IGetsWellKnownNamespace&gt;,auto&lt;Namespace&gt;,auto&lt;MetalAttributeSpecProvider&gt;)" fullname="ZptSharp.Metal.MetalAttributeSpecProviderTests.UseMacro_returns_instance_with_correct_namespace" methodname="UseMacro_returns_instance_with_correct_namespace" classname="ZptSharp.Metal.MetalAttributeSpecProviderTests" result="Passed" duration="0.000287" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MetalContextProcessorFactoryTests" fullname="ZptSharp.Metal.MetalContextProcessorFactoryTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.000549">
          <test-case name="GetMetalContextProcessor_returns_instance(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;IEvaluatesExpression&gt;,auto&lt;IExpandsMacro&gt;,auto&lt;MetalContextProcessorFactory&gt;)" fullname="ZptSharp.Metal.MetalContextProcessorFactoryTests.GetMetalContextProcessor_returns_instance" methodname="GetMetalContextProcessor_returns_instance" classname="ZptSharp.Metal.MetalContextProcessorFactoryTests" result="Passed" duration="0.000549" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MetalDocumentAdapterFactoryTests" fullname="ZptSharp.Metal.MetalDocumentAdapterFactoryTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.000411">
          <test-case name="GetMetalDocumentAdapter_returns_instance(auto&lt;ISearchesForAttributes&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;MetalDocumentAdapterFactory&gt;,auto&lt;IDocument&gt;)" fullname="ZptSharp.Metal.MetalDocumentAdapterFactoryTests.GetMetalDocumentAdapter_returns_instance" methodname="GetMetalDocumentAdapter_returns_instance" classname="ZptSharp.Metal.MetalDocumentAdapterFactoryTests" result="Passed" duration="0.000411" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MetalDocumentAdapterTests" fullname="ZptSharp.Metal.MetalDocumentAdapterTests" total="5" passed="5" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.008394">
          <test-case name="GetMacros_returns_results_from_attribute_searcher(auto&lt;ISearchesForAttributes&gt;,auto&lt;IDocument&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;AttributeSpec&gt;,auto&lt;MetalDocumentAdapter&gt;,auto&lt;IAttribute&gt;,auto&lt;IAttribute&gt;)" fullname="ZptSharp.Metal.MetalDocumentAdapterTests.GetMacros_returns_results_from_attribute_searcher" methodname="GetMacros_returns_results_from_attribute_searcher" classname="ZptSharp.Metal.MetalDocumentAdapterTests" result="Passed" duration="0.003125" asserts="0" />
          <test-case name="GetMacros_returns_results_with_correct_keys(auto&lt;ISearchesForAttributes&gt;,auto&lt;IDocument&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;AttributeSpec&gt;,auto&lt;MetalDocumentAdapter&gt;,auto&lt;IAttribute&gt;,auto&lt;IAttribute&gt;)" fullname="ZptSharp.Metal.MetalDocumentAdapterTests.GetMacros_returns_results_with_correct_keys" methodname="GetMacros_returns_results_with_correct_keys" classname="ZptSharp.Metal.MetalDocumentAdapterTests" result="Passed" duration="0.001194" asserts="0" />
          <test-case name="GetMacros_returns_results_with_correct_values(auto&lt;ISearchesForAttributes&gt;,auto&lt;IDocument&gt;,auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;AttributeSpec&gt;,auto&lt;MetalDocumentAdapter&gt;,auto&lt;IAttribute&gt;,auto&lt;IAttribute&gt;)" fullname="ZptSharp.Metal.MetalDocumentAdapterTests.GetMacros_returns_results_with_correct_values" methodname="GetMacros_returns_results_with_correct_values" classname="ZptSharp.Metal.MetalDocumentAdapterTests" result="Passed" duration="0.001402" asserts="0" />
          <test-case name="TryGetValueAsync_returns_false_if_other_value_requested(auto&lt;MetalDocumentAdapter&gt;)" fullname="ZptSharp.Metal.MetalDocumentAdapterTests.TryGetValueAsync_returns_false_if_other_value_requested" methodname="TryGetValueAsync_returns_false_if_other_value_requested" classname="ZptSharp.Metal.MetalDocumentAdapterTests" result="Passed" duration="0.00076" asserts="0" />
          <test-case name="TryGetValueAsync_returns_true_if_macros_requested(auto&lt;ISearchesForAttributes&gt;,auto&lt;MetalDocumentAdapter&gt;)" fullname="ZptSharp.Metal.MetalDocumentAdapterTests.TryGetValueAsync_returns_true_if_macros_requested" methodname="TryGetValueAsync_returns_true_if_macros_requested" classname="ZptSharp.Metal.MetalDocumentAdapterTests" result="Passed" duration="0.001913" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="SlotFillerTests" fullname="ZptSharp.Metal.SlotFillerTests" total="3" passed="3" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.02143">
          <test-case name="FillSlots_does_not_fill_a_slot_which_has_no_filler(auto&lt;Slot&gt;,auto&lt;IElement&gt;,auto&lt;MacroExpansionContext&gt;,auto&lt;SlotFiller&gt;)" fullname="ZptSharp.Metal.SlotFillerTests.FillSlots_does_not_fill_a_slot_which_has_no_filler" methodname="FillSlots_does_not_fill_a_slot_which_has_no_filler" classname="ZptSharp.Metal.SlotFillerTests" result="Passed" duration="0.007065" asserts="0" />
          <test-case name="FillSlots_removes_a_slot_filler_from_the_context_once_it_is_used(auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;String&gt;,auto&lt;MacroExpansionContext&gt;,auto&lt;SlotFiller&gt;)" fullname="ZptSharp.Metal.SlotFillerTests.FillSlots_removes_a_slot_filler_from_the_context_once_it_is_used" methodname="FillSlots_removes_a_slot_filler_from_the_context_once_it_is_used" classname="ZptSharp.Metal.SlotFillerTests" result="Passed" duration="0.005088" asserts="0" />
          <test-case name="FillSlots_replaces_the_element_with_its_filler(auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;String&gt;,auto&lt;MacroExpansionContext&gt;,auto&lt;SlotFiller&gt;)" fullname="ZptSharp.Metal.SlotFillerTests.FillSlots_replaces_the_element_with_its_filler" methodname="FillSlots_replaces_the_element_with_its_filler" classname="ZptSharp.Metal.SlotFillerTests" result="Passed" duration="0.009277" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="SlotFinderTests" fullname="ZptSharp.Metal.SlotFinderTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.005551">
          <test-case name="GetDefinedSlots_gets_elements_with_define_slot_attributes(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;ISearchesForAttributes&gt;,auto&lt;SlotFinder&gt;,auto&lt;IElement&gt;,auto&lt;AttributeSpec&gt;,auto&lt;IAttribute&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Metal.SlotFinderTests.GetDefinedSlots_gets_elements_with_define_slot_attributes" methodname="GetDefinedSlots_gets_elements_with_define_slot_attributes" classname="ZptSharp.Metal.SlotFinderTests" result="Passed" duration="0.003921" asserts="0" />
          <test-case name="GetSlotFillers_gets_elements_with_fill_slot_attributes(auto&lt;IGetsMetalAttributeSpecs&gt;,auto&lt;ISearchesForAttributes&gt;,auto&lt;SlotFinder&gt;,auto&lt;IElement&gt;,auto&lt;AttributeSpec&gt;,auto&lt;IAttribute&gt;,auto&lt;IElement&gt;,auto&lt;IAttribute&gt;,auto&lt;IElement&gt;)" fullname="ZptSharp.Metal.SlotFinderTests.GetSlotFillers_gets_elements_with_fill_slot_attributes" methodname="GetSlotFillers_gets_elements_with_fill_slot_attributes" classname="ZptSharp.Metal.SlotFinderTests" result="Passed" duration="0.00163" asserts="0" />
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" name="PathExpressions" fullname="ZptSharp.PathExpressions" total="24" passed="24" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.091729">
        <test-suite type="TestFixture" name="DecoratorBasedObjectValueProviderTests" fullname="ZptSharp.PathExpressions.DecoratorBasedObjectValueProviderTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.006196">
          <test-case name="TryGetValueAsync_does_not_throw_if_object_is_null(auto&lt;RenderingConfig&gt;,auto&lt;IGetsBuiltinContextsProvider&gt;,auto&lt;DecoratorBasedObjectValueProvider&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.DecoratorBasedObjectValueProviderTests.TryGetValueAsync_does_not_throw_if_object_is_null" methodname="TryGetValueAsync_does_not_throw_if_object_is_null" classname="ZptSharp.PathExpressions.DecoratorBasedObjectValueProviderTests" result="Passed" duration="0.003743" asserts="0" />
          <test-case name="TryGetValueAsync_returns_result_for_an_object_and_does_not_throw(auto&lt;RenderingConfig&gt;,auto&lt;IGetsBuiltinContextsProvider&gt;,auto&lt;DecoratorBasedObjectValueProvider&gt;,auto&lt;String&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.DecoratorBasedObjectValueProviderTests.TryGetValueAsync_returns_result_for_an_object_and_does_not_throw" methodname="TryGetValueAsync_returns_result_for_an_object_and_does_not_throw" classname="ZptSharp.PathExpressions.DecoratorBasedObjectValueProviderTests" result="Passed" duration="0.002453" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="PathExpressionEvaluatorTests" fullname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.022826">
          <test-case name="EvaluateExpressionAsync_returns_result_from_evaluating_first_alternate_expression_if_it_yields_result(auto&lt;IParsesPathExpression&gt;,auto&lt;IWalksAndEvaluatesPathExpression&gt;,auto&lt;PathExpressionEvaluator&gt;,auto&lt;AlternateExpression&gt;,auto&lt;AlternateExpression&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests.EvaluateExpressionAsync_returns_result_from_evaluating_first_alternate_expression_if_it_yields_result" methodname="EvaluateExpressionAsync_returns_result_from_evaluating_first_alternate_expression_if_it_yields_result" classname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests" result="Passed" duration="0.004821" asserts="0" />
          <test-case name="EvaluateExpressionAsync_returns_result_from_evaluating_second_alternate_expression_if_first_throws(auto&lt;IParsesPathExpression&gt;,auto&lt;IWalksAndEvaluatesPathExpression&gt;,auto&lt;PathExpressionEvaluator&gt;,auto&lt;AlternateExpression&gt;,auto&lt;AlternateExpression&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests.EvaluateExpressionAsync_returns_result_from_evaluating_second_alternate_expression_if_first_throws" methodname="EvaluateExpressionAsync_returns_result_from_evaluating_second_alternate_expression_if_first_throws" classname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests" result="Passed" duration="0.014729" asserts="0" />
          <test-case name="EvaluateExpressionAsync_throws_AggregateException_if_evaluating_more_than_one_alternate_throws(auto&lt;IParsesPathExpression&gt;,auto&lt;IWalksAndEvaluatesPathExpression&gt;,auto&lt;PathExpressionEvaluator&gt;,auto&lt;AlternateExpression&gt;,auto&lt;AlternateExpression&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests.EvaluateExpressionAsync_throws_AggregateException_if_evaluating_more_than_one_alternate_throws" methodname="EvaluateExpressionAsync_throws_AggregateException_if_evaluating_more_than_one_alternate_throws" classname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests" result="Passed" duration="0.001775" asserts="0" />
          <test-case name="EvaluateExpressionAsync_throws_EvaluationException_if_evaluating_single_alternate_throws(auto&lt;IParsesPathExpression&gt;,auto&lt;IWalksAndEvaluatesPathExpression&gt;,auto&lt;PathExpressionEvaluator&gt;,auto&lt;AlternateExpression&gt;,auto&lt;String&gt;,auto&lt;ExpressionContext&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests.EvaluateExpressionAsync_throws_EvaluationException_if_evaluating_single_alternate_throws" methodname="EvaluateExpressionAsync_throws_EvaluationException_if_evaluating_single_alternate_throws" classname="ZptSharp.PathExpressions.PathExpressionEvaluatorTests" result="Passed" duration="0.001501" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="PathExpressionParserTests" fullname="ZptSharp.PathExpressions.PathExpressionParserTests" total="13" passed="13" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.025889">
          <test-case name="Parse_can_parse_an_expression_which_has_a_single_path_part(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_can_parse_an_expression_which_has_a_single_path_part" methodname="Parse_can_parse_an_expression_which_has_a_single_path_part" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.004082" asserts="0" />
          <test-case name="Parse_can_parse_an_expression_which_has_a_three_part_path(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_can_parse_an_expression_which_has_a_three_part_path" methodname="Parse_can_parse_an_expression_which_has_a_three_part_path" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.015217" asserts="0" />
          <test-case name="Parse_can_parse_an_expression_which_has_two_alternate_expressions(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_can_parse_an_expression_which_has_two_alternate_expressions" methodname="Parse_can_parse_an_expression_which_has_two_alternate_expressions" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.000582" asserts="0" />
          <test-case name="Parse_can_parse_an_expression_which_includes_an_interpolated_part(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_can_parse_an_expression_which_includes_an_interpolated_part" methodname="Parse_can_parse_an_expression_which_includes_an_interpolated_part" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.000268" asserts="0" />
          <test-case name="Parse_does_not_throw_if_a_path_part_is_whitespace_only(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_does_not_throw_if_a_path_part_is_whitespace_only" methodname="Parse_does_not_throw_if_a_path_part_is_whitespace_only" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.002616" asserts="0" />
          <test-case name="Parse_does_not_throws_if_subsequent_path_parts_contain_permitted_punctuation(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_does_not_throws_if_subsequent_path_parts_contain_permitted_punctuation" methodname="Parse_does_not_throws_if_subsequent_path_parts_contain_permitted_punctuation" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.00024" asserts="0" />
          <test-case name="Parse_throws_ANE_if_the_expression_is_null(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_ANE_if_the_expression_is_null" methodname="Parse_throws_ANE_if_the_expression_is_null" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.000411" asserts="0" />
          <test-case name="Parse_throws_if_a_path_part_is_missing(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_if_a_path_part_is_missing" methodname="Parse_throws_if_a_path_part_is_missing" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.000532" asserts="0" />
          <test-case name="Parse_throws_if_an_alternate_expression_is_whitespace(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_if_an_alternate_expression_is_whitespace" methodname="Parse_throws_if_an_alternate_expression_is_whitespace" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.00041" asserts="0" />
          <test-case name="Parse_throws_if_an_expression_is_whitespace(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_if_an_expression_is_whitespace" methodname="Parse_throws_if_an_expression_is_whitespace" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.00035" asserts="0" />
          <test-case name="Parse_throws_if_first_path_part_is_not_a_variable_name(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_if_first_path_part_is_not_a_variable_name" methodname="Parse_throws_if_first_path_part_is_not_a_variable_name" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.000409" asserts="0" />
          <test-case name="Parse_throws_if_subsequent_path_part_contains_illegal_character(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_if_subsequent_path_part_contains_illegal_character" methodname="Parse_throws_if_subsequent_path_part_contains_illegal_character" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.000432" asserts="0" />
          <test-case name="Parse_throws_if_the_expression_is_empty_string(auto&lt;PathExpressionParser&gt;)" fullname="ZptSharp.PathExpressions.PathExpressionParserTests.Parse_throws_if_the_expression_is_empty_string" methodname="Parse_throws_if_the_expression_is_empty_string" classname="ZptSharp.PathExpressions.PathExpressionParserTests" result="Passed" duration="0.00034" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="PathWalkingExpressionEvaluatorTests" fullname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests" total="5" passed="5" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.036818">
          <test-case name="WalkAndEvaluatePathExpressionAsync_returns_value_from_expression_context_for_2nd_level_interpolated_path_part(auto&lt;IGetsValueFromObject&gt;,auto&lt;PathWalkingExpressionEvaluator&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;Object&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests.WalkAndEvaluatePathExpressionAsync_returns_value_from_expression_context_for_2nd_level_interpolated_path_part" methodname="WalkAndEvaluatePathExpressionAsync_returns_value_from_expression_context_for_2nd_level_interpolated_path_part" classname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests" result="Passed" duration="0.01863" asserts="0" />
          <test-case name="WalkAndEvaluatePathExpressionAsync_returns_value_from_expression_context_for_root_path_part(auto&lt;IGetsValueFromObject&gt;,auto&lt;PathWalkingExpressionEvaluator&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests.WalkAndEvaluatePathExpressionAsync_returns_value_from_expression_context_for_root_path_part" methodname="WalkAndEvaluatePathExpressionAsync_returns_value_from_expression_context_for_root_path_part" classname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests" result="Passed" duration="0.001508" asserts="0" />
          <test-case name="WalkAndEvaluatePathExpressionAsync_returns_value_from_root_object_for_2nd_level_path_part(auto&lt;IGetsValueFromObject&gt;,auto&lt;PathWalkingExpressionEvaluator&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests.WalkAndEvaluatePathExpressionAsync_returns_value_from_root_object_for_2nd_level_path_part" methodname="WalkAndEvaluatePathExpressionAsync_returns_value_from_root_object_for_2nd_level_path_part" classname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests" result="Passed" duration="0.00613" asserts="0" />
          <test-case name="WalkAndEvaluatePathExpressionAsync_throws_EvaluationException_if_a_value_cannot_be_retrieved(auto&lt;IGetsValueFromObject&gt;,auto&lt;PathWalkingExpressionEvaluator&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;,auto&lt;String&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests.WalkAndEvaluatePathExpressionAsync_throws_EvaluationException_if_a_value_cannot_be_retrieved" methodname="WalkAndEvaluatePathExpressionAsync_throws_EvaluationException_if_a_value_cannot_be_retrieved" classname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests" result="Passed" duration="0.002252" asserts="0" />
          <test-case name="WalkAndEvaluatePathExpressionAsync_throws_EvaluationException_if_an_interpolated_name_cannot_be_retrieved(auto&lt;IGetsValueFromObject&gt;,auto&lt;PathWalkingExpressionEvaluator&gt;,auto&lt;ExpressionContext&gt;,auto&lt;String&gt;,auto&lt;String&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests.WalkAndEvaluatePathExpressionAsync_throws_EvaluationException_if_an_interpolated_name_cannot_be_retrieved" methodname="WalkAndEvaluatePathExpressionAsync_throws_EvaluationException_if_an_interpolated_name_cannot_be_retrieved" classname="ZptSharp.PathExpressions.PathWalkingExpressionEvaluatorTests" result="Passed" duration="0.008298" asserts="0" />
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" name="Rendering" fullname="ZptSharp.Rendering" total="29" passed="29" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0874308">
        <test-suite type="TestFixture" name="ElementSourceInfoTests" fullname="ZptSharp.Rendering.ElementSourceInfoTests" total="12" passed="12" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.008921">
          <test-case name="Ctor_throws_ANE_if_document_source_is_null()" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Ctor_throws_ANE_if_document_source_is_null" methodname="Ctor_throws_ANE_if_document_source_is_null" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000567" asserts="0" />
          <test-case name="Equals_returns_false_comparing_with_null(auto&lt;ElementSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_false_comparing_with_null" methodname="Equals_returns_false_comparing_with_null" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.006102" asserts="0" />
          <test-case name="Equals_returns_false_if_both_line_numbers_are_null(auto&lt;IDocumentSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_false_if_both_line_numbers_are_null" methodname="Equals_returns_false_if_both_line_numbers_are_null" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000208" asserts="0" />
          <test-case name="Equals_returns_false_if_documents_differ(auto&lt;IDocumentSourceInfo&gt;,auto&lt;IDocumentSourceInfo&gt;,auto&lt;Int32&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_false_if_documents_differ" methodname="Equals_returns_false_if_documents_differ" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000288" asserts="0" />
          <test-case name="Equals_returns_false_if_line_number_is_null(auto&lt;IDocumentSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_false_if_line_number_is_null" methodname="Equals_returns_false_if_line_number_is_null" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000317" asserts="0" />
          <test-case name="Equals_returns_false_if_other_line_number_is_null(auto&lt;IDocumentSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_false_if_other_line_number_is_null" methodname="Equals_returns_false_if_other_line_number_is_null" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000195" asserts="0" />
          <test-case name="Equals_returns_false_if_two_instances_have_different_line_numbers(auto&lt;IDocumentSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_false_if_two_instances_have_different_line_numbers" methodname="Equals_returns_false_if_two_instances_have_different_line_numbers" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000193" asserts="0" />
          <test-case name="Equals_returns_true_if_instances_are_reference_equal(auto&lt;ElementSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_true_if_instances_are_reference_equal" methodname="Equals_returns_true_if_instances_are_reference_equal" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000159" asserts="0" />
          <test-case name="Equals_returns_true_if_two_instances_have_same_document_and_line_number(auto&lt;IDocumentSourceInfo&gt;,auto&lt;Int32&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.Equals_returns_true_if_two_instances_have_same_document_and_line_number" methodname="Equals_returns_true_if_two_instances_have_same_document_and_line_number" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000183" asserts="0" />
          <test-case name="GetHashCode_returns_different_result_for_different_line_number(auto&lt;IDocumentSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.GetHashCode_returns_different_result_for_different_line_number" methodname="GetHashCode_returns_different_result_for_different_line_number" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000306" asserts="0" />
          <test-case name="GetHashCode_returns_different_result_for_two_instances_without_line_numbers(auto&lt;IDocumentSourceInfo&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.GetHashCode_returns_different_result_for_two_instances_without_line_numbers" methodname="GetHashCode_returns_different_result_for_two_instances_without_line_numbers" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000199" asserts="0" />
          <test-case name="GetHashCode_with_same_document_and_line_number_is_equal(auto&lt;IDocumentSourceInfo&gt;,auto&lt;Int32&gt;)" fullname="ZptSharp.Rendering.ElementSourceInfoTests.GetHashCode_with_same_document_and_line_number_is_equal" methodname="GetHashCode_with_same_document_and_line_number_is_equal" classname="ZptSharp.Rendering.ElementSourceInfoTests" result="Passed" duration="0.000204" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ExpressionContextFactoryTests" fullname="ZptSharp.Rendering.ExpressionContextFactoryTests" total="3" passed="3" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0080339">
          <test-case name="GetChildContexts_returns_a_context_for_each_child_element(auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;,auto&lt;IElement&gt;,auto&lt;ExpressionContextFactory&gt;)" fullname="ZptSharp.Rendering.ExpressionContextFactoryTests.GetChildContexts_returns_a_context_for_each_child_element" methodname="GetChildContexts_returns_a_context_for_each_child_element" classname="ZptSharp.Rendering.ExpressionContextFactoryTests" result="Passed" duration="0.006769" asserts="0" />
          <test-case name="GetChildContexts_returns_a_context_with_correct_properties(auto&lt;ExpressionContext&gt;,auto&lt;IElement&gt;,auto&lt;ExpressionContextFactory&gt;)" fullname="ZptSharp.Rendering.ExpressionContextFactoryTests.GetChildContexts_returns_a_context_with_correct_properties" methodname="GetChildContexts_returns_a_context_with_correct_properties" classname="ZptSharp.Rendering.ExpressionContextFactoryTests" result="Passed" duration="0.0007829" asserts="0" />
          <test-case name="GetExpressionContext_returns_context_with_correct_document_root_element_and_model(auto&lt;IDocument&gt;,auto&lt;RenderZptDocumentRequest&gt;,auto&lt;IElement&gt;,auto&lt;ExpressionContextFactory&gt;)" fullname="ZptSharp.Rendering.ExpressionContextFactoryTests.GetExpressionContext_returns_context_with_correct_document_root_element_and_model" methodname="GetExpressionContext_returns_context_with_correct_document_root_element_and_model" classname="ZptSharp.Rendering.ExpressionContextFactoryTests" result="Passed" duration="0.000482" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ExpressionContextIterativeProcessorTests" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" total="7" passed="7" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0297889">
          <test-case name="IterateContextAndChildrenAsync_should_process_additional_contexts(auto&lt;IProcessesExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_additional_contexts" methodname="IterateContextAndChildrenAsync_should_process_additional_contexts" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.0105609" asserts="0" />
          <test-case name="IterateContextAndChildrenAsync_should_process_additional_contexts_from_child_context(auto&lt;IProcessesExpressionContext&gt;,auto&lt;IGetsChildExpressionContexts&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_additional_contexts_from_child_context" methodname="IterateContextAndChildrenAsync_should_process_additional_contexts_from_child_context" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.003015" asserts="0" />
          <test-case name="IterateContextAndChildrenAsync_should_process_child_contexts(auto&lt;IProcessesExpressionContext&gt;,auto&lt;IGetsChildExpressionContexts&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_child_contexts" methodname="IterateContextAndChildrenAsync_should_process_child_contexts" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.005301" asserts="0" />
          <test-case name="IterateContextAndChildrenAsync_should_process_children_of_additional_context(auto&lt;IProcessesExpressionContext&gt;,auto&lt;IGetsChildExpressionContexts&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_children_of_additional_context" methodname="IterateContextAndChildrenAsync_should_process_children_of_additional_context" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.00262" asserts="0" />
          <test-case name="IterateContextAndChildrenAsync_should_process_grandchild_contexts(auto&lt;IProcessesExpressionContext&gt;,auto&lt;IGetsChildExpressionContexts&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_grandchild_contexts" methodname="IterateContextAndChildrenAsync_should_process_grandchild_contexts" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.002406" asserts="0" />
          <test-case name="IterateContextAndChildrenAsync_should_process_sibling_additional_contexts(auto&lt;IProcessesExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_sibling_additional_contexts" methodname="IterateContextAndChildrenAsync_should_process_sibling_additional_contexts" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.004902" asserts="0" />
          <test-case name="IterateContextAndChildrenAsync_should_process_the_specified_context(auto&lt;IProcessesExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;ExpressionContextIterativeProcessor&gt;)" fullname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests.IterateContextAndChildrenAsync_should_process_the_specified_context" methodname="IterateContextAndChildrenAsync_should_process_the_specified_context" classname="ZptSharp.Rendering.ExpressionContextIterativeProcessorTests" result="Passed" duration="0.000984" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="IterativeDocumentModifierTests" fullname="ZptSharp.Rendering.IterativeDocumentModifierTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.008577">
          <test-case name="ModifyDocumentAsync_uses_iterator_from_factory_with_context_processor(auto&lt;IGetsIterativeExpressionContextProcessor&gt;,auto&lt;IGetsRootExpressionContext&gt;,auto&lt;IDocument&gt;,auto&lt;RenderZptDocumentRequest&gt;,auto&lt;IProcessesExpressionContext&gt;,auto&lt;ExpressionContext&gt;,auto&lt;IIterativelyProcessesExpressionContexts&gt;,auto&lt;IterativeDocumentModifier&gt;)" fullname="ZptSharp.Rendering.IterativeDocumentModifierTests.ModifyDocumentAsync_uses_iterator_from_factory_with_context_processor" methodname="ModifyDocumentAsync_uses_iterator_from_factory_with_context_processor" classname="ZptSharp.Rendering.IterativeDocumentModifierTests" result="Passed" duration="0.008577" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="IterativeExpressionContextProcessorFactoryTests" fullname="ZptSharp.Rendering.IterativeExpressionContextProcessorFactoryTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.000399">
          <test-case name="GetContextIterator_returns_instance(auto&lt;IProcessesExpressionContext&gt;,auto&lt;IterativeExpressionContextProcessorFactory&gt;)" fullname="ZptSharp.Rendering.IterativeExpressionContextProcessorFactoryTests.GetContextIterator_returns_instance" methodname="GetContextIterator_returns_instance" classname="ZptSharp.Rendering.IterativeExpressionContextProcessorFactoryTests" result="Passed" duration="0.000399" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="MetalDocumentModifierDecoratorTests" fullname="ZptSharp.Rendering.MetalDocumentModifierDecoratorTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.011454">
          <test-case name="ModifyDocumentAsync_uses_the_iterative_modifier_with_the_METAL_context_processor(auto&lt;IGetsMetalContextProcessor&gt;,auto&lt;IIterativelyModifiesDocument&gt;,auto&lt;IModifiesDocument&gt;,auto&lt;MetalDocumentModifierDecorator&gt;,auto&lt;IProcessesExpressionContext&gt;,auto&lt;IDocument&gt;,auto&lt;RenderZptDocumentRequest&gt;)" fullname="ZptSharp.Rendering.MetalDocumentModifierDecoratorTests.ModifyDocumentAsync_uses_the_iterative_modifier_with_the_METAL_context_processor" methodname="ModifyDocumentAsync_uses_the_iterative_modifier_with_the_METAL_context_processor" classname="ZptSharp.Rendering.MetalDocumentModifierDecoratorTests" result="Passed" duration="0.011454" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ZptDocumentModifierFactoryTests" fullname="ZptSharp.Rendering.ZptDocumentModifierFactoryTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0055">
          <test-case name="GetDocumentModifier_returns_instance(auto&lt;RenderZptDocumentRequest&gt;,auto&lt;ZptDocumentModifierFactory&gt;)" fullname="ZptSharp.Rendering.ZptDocumentModifierFactoryTests.GetDocumentModifier_returns_instance" methodname="GetDocumentModifier_returns_instance" classname="ZptSharp.Rendering.ZptDocumentModifierFactoryTests" result="Passed" duration="0.0055" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ZptDocumentRendererFactoryTests" fullname="ZptSharp.Rendering.ZptDocumentRendererFactoryTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.000386">
          <test-case name="GetDocumentRenderer_returns_instance(auto&lt;ZptDocumentRendererFactory&gt;)" fullname="ZptSharp.Rendering.ZptDocumentRendererFactoryTests.GetDocumentRenderer_returns_instance" methodname="GetDocumentRenderer_returns_instance" classname="ZptSharp.Rendering.ZptDocumentRendererFactoryTests" result="Passed" duration="0.000386" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" name="ZptRequestRendererTests" fullname="ZptSharp.Rendering.ZptRequestRendererTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.014371">
          <test-case name="RenderAsync_returns_stream_using_correct_process(auto&lt;IReadsAndWritesDocument&gt;,auto&lt;IGetsDocumentModifier&gt;,auto&lt;IStoresCurrentReaderWriter&gt;,auto&lt;IServiceProvider&gt;,auto&lt;IModifiesDocument&gt;,auto&lt;ZptRequestRenderer&gt;,auto&lt;Stream&gt;,auto&lt;Stream&gt;,auto&lt;Object&gt;,auto&lt;IDocumentSourceInfo&gt;,auto&lt;IDocument&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IStoresCurrentRenderingConfig&gt;)" fullname="ZptSharp.Rendering.ZptRequestRendererTests.RenderAsync_returns_stream_using_correct_process" methodname="RenderAsync_returns_stream_using_correct_process" classname="ZptSharp.Rendering.ZptRequestRendererTests" result="Passed" duration="0.01108" asserts="0" />
          <test-case name="RenderAsync_uses_reader_writer_from_service_provider_if_not_included_in_request(auto&lt;IReadsAndWritesDocument&gt;,auto&lt;IStoresCurrentReaderWriter&gt;,auto&lt;IServiceProvider&gt;,auto&lt;IGetsDocumentModifier&gt;,auto&lt;IModifiesDocument&gt;,auto&lt;ZptRequestRenderer&gt;,auto&lt;Stream&gt;,auto&lt;Stream&gt;,auto&lt;Object&gt;,auto&lt;IDocumentSourceInfo&gt;,auto&lt;IDocument&gt;,auto&lt;RenderingConfig&gt;,auto&lt;IStoresCurrentRenderingConfig&gt;)" fullname="ZptSharp.Rendering.ZptRequestRendererTests.RenderAsync_uses_reader_writer_from_service_provider_if_not_included_in_request" methodname="RenderAsync_uses_reader_writer_from_service_provider_if_not_included_in_request" classname="ZptSharp.Rendering.ZptRequestRendererTests" result="Passed" duration="0.003291" asserts="0" />
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="TestSuite" name="ZptSharp" fullname="ZptSharp" total="33" passed="33" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.2056529">
      <test-suite type="TestSuite" name="PathExpressions" fullname="ZptSharp.PathExpressions" total="33" passed="33" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.2056529">
        <test-suite type="TestSuite" name="ValueProviders" fullname="ZptSharp.PathExpressions.ValueProviders" total="33" passed="33" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.2056529">
          <test-suite type="TestFixture" name="DynamicObjectValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests" total="4" passed="4" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.084393">
            <test-case name="TryGetValueAsync_returns_a_success_result_for_an_expando_object(auto&lt;DynamicObjectValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests.TryGetValueAsync_returns_a_success_result_for_an_expando_object" methodname="TryGetValueAsync_returns_a_success_result_for_an_expando_object" classname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests" result="Passed" duration="0.080751" asserts="0" />
            <test-case name="TryGetValueAsync_returns_result_from_wrapped_service_for_a_non_dynamic_object(auto&lt;IGetsValueFromObject&gt;,auto&lt;DynamicObjectValueProvider&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests.TryGetValueAsync_returns_result_from_wrapped_service_for_a_non_dynamic_object" methodname="TryGetValueAsync_returns_result_from_wrapped_service_for_a_non_dynamic_object" classname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests" result="Passed" duration="0.001311" asserts="0" />
            <test-case name="TryGetValueAsync_should_return_a_failure_result_with_incorrect_value_for_a_dynamic_object(auto&lt;DynamicObjectValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests.TryGetValueAsync_should_return_a_failure_result_with_incorrect_value_for_a_dynamic_object" methodname="TryGetValueAsync_should_return_a_failure_result_with_incorrect_value_for_a_dynamic_object" classname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests" result="Passed" duration="0.001362" asserts="0" />
            <test-case name="TryGetValueAsync_should_return_success_result_with_correct_value_for_a_dynamic_object(auto&lt;DynamicObjectValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests.TryGetValueAsync_should_return_success_result_with_correct_value_for_a_dynamic_object" methodname="TryGetValueAsync_should_return_success_result_with_correct_value_for_a_dynamic_object" classname="ZptSharp.PathExpressions.ValueProviders.DynamicObjectValueProviderTests" result="Passed" duration="0.000969" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="EnumerableValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" total="7" passed="7" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.020824">
            <test-case name="TryGetValueAsync_can_return_failure_result_from_enumerable_for_index_higher_than_last_index(auto&lt;EnumerableValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_can_return_failure_result_from_enumerable_for_index_higher_than_last_index" methodname="TryGetValueAsync_can_return_failure_result_from_enumerable_for_index_higher_than_last_index" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.000638" asserts="0" />
            <test-case name="TryGetValueAsync_can_return_failure_result_from_enumerable_for_index_lower_than_zero(auto&lt;EnumerableValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_can_return_failure_result_from_enumerable_for_index_lower_than_zero" methodname="TryGetValueAsync_can_return_failure_result_from_enumerable_for_index_lower_than_zero" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.012001" asserts="0" />
            <test-case name="TryGetValueAsync_can_return_failure_result_from_list_for_index_higher_than_last_index(auto&lt;EnumerableValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_can_return_failure_result_from_list_for_index_higher_than_last_index" methodname="TryGetValueAsync_can_return_failure_result_from_list_for_index_higher_than_last_index" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.000442" asserts="0" />
            <test-case name="TryGetValueAsync_can_return_failure_result_from_list_for_index_lower_than_zero(auto&lt;EnumerableValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_can_return_failure_result_from_list_for_index_lower_than_zero" methodname="TryGetValueAsync_can_return_failure_result_from_list_for_index_lower_than_zero" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.000437" asserts="0" />
            <test-case name="TryGetValueAsync_can_return_successful_result_with_item_from_enumerable(auto&lt;EnumerableValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_can_return_successful_result_with_item_from_enumerable" methodname="TryGetValueAsync_can_return_successful_result_with_item_from_enumerable" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.000507" asserts="0" />
            <test-case name="TryGetValueAsync_can_return_successful_result_with_item_from_list(auto&lt;EnumerableValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_can_return_successful_result_with_item_from_list" methodname="TryGetValueAsync_can_return_successful_result_with_item_from_list" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.000538" asserts="0" />
            <test-case name="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_enumerable(auto&lt;IGetsValueFromObject&gt;,auto&lt;EnumerableValueProvider&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests.TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_enumerable" methodname="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_enumerable" classname="ZptSharp.PathExpressions.ValueProviders.EnumerableValueProviderTests" result="Passed" duration="0.006261" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="ExpressionContextWrappingDecoratorTests" fullname="ZptSharp.PathExpressions.ValueProviders.ExpressionContextWrappingDecoratorTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.016199">
            <test-case name="TryGetValueAsync_returns_value_from_wrapped_service_using_context_adaper_when_input_object_is_expression_context(auto&lt;RenderingConfig&gt;,auto&lt;IGetsValueFromObject&gt;,auto&lt;ExpressionContextWrappingDecorator&gt;,auto&lt;ExpressionContext&gt;,auto&lt;GetValueResult&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ExpressionContextWrappingDecoratorTests.TryGetValueAsync_returns_value_from_wrapped_service_using_context_adaper_when_input_object_is_expression_context" methodname="TryGetValueAsync_returns_value_from_wrapped_service_using_context_adaper_when_input_object_is_expression_context" classname="ZptSharp.PathExpressions.ValueProviders.ExpressionContextWrappingDecoratorTests" result="Passed" duration="0.014854" asserts="0" />
            <test-case name="TryGetValueAsync_returns_value_from_wrapped_service_using_original_input_when_input_is_not_expression_context(auto&lt;RenderingConfig&gt;,auto&lt;IGetsValueFromObject&gt;,auto&lt;ExpressionContextWrappingDecorator&gt;,auto&lt;Object&gt;,auto&lt;GetValueResult&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ExpressionContextWrappingDecoratorTests.TryGetValueAsync_returns_value_from_wrapped_service_using_original_input_when_input_is_not_expression_context" methodname="TryGetValueAsync_returns_value_from_wrapped_service_using_original_input_when_input_is_not_expression_context" classname="ZptSharp.PathExpressions.ValueProviders.ExpressionContextWrappingDecoratorTests" result="Passed" duration="0.001345" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="FailureValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.FailureValueProviderTests" total="1" passed="1" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.000453">
            <test-case name="TryGetValueAsync_returns_failure_result(auto&lt;FailureValueProvider&gt;,auto&lt;String&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.FailureValueProviderTests.TryGetValueAsync_returns_failure_result" methodname="TryGetValueAsync_returns_failure_result" classname="ZptSharp.PathExpressions.ValueProviders.FailureValueProviderTests" result="Passed" duration="0.000453" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="IntegerKeyedDictionaryValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests" total="5" passed="5" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.005751">
            <test-case name="TryGetValueAsync_returns_failure_result_for_nonexistent_integer_object_dictionary_item(auto&lt;IntegerKeyedDictionaryValueProvider&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_failure_result_for_nonexistent_integer_object_dictionary_item" methodname="TryGetValueAsync_returns_failure_result_for_nonexistent_integer_object_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests" result="Passed" duration="0.001759" asserts="0" />
            <test-case name="TryGetValueAsync_returns_failure_result_for_nonexistent_integer_string_dictionary_item(auto&lt;IntegerKeyedDictionaryValueProvider&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_failure_result_for_nonexistent_integer_string_dictionary_item" methodname="TryGetValueAsync_returns_failure_result_for_nonexistent_integer_string_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests" result="Passed" duration="0.001233" asserts="0" />
            <test-case name="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_a_dictionary_keyed_by_integer(auto&lt;IGetsValueFromObject&gt;,auto&lt;IntegerKeyedDictionaryValueProvider&gt;,auto&lt;Int32&gt;,auto&lt;Object&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_a_dictionary_keyed_by_integer" methodname="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_a_dictionary_keyed_by_integer" classname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests" result="Passed" duration="0.001686" asserts="0" />
            <test-case name="TryGetValueAsync_returns_success_result_for_existing_integer_object_dictionary_item(auto&lt;IntegerKeyedDictionaryValueProvider&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_success_result_for_existing_integer_object_dictionary_item" methodname="TryGetValueAsync_returns_success_result_for_existing_integer_object_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests" result="Passed" duration="0.000484" asserts="0" />
            <test-case name="TryGetValueAsync_returns_success_result_for_existing_integer_string_dictionary_item(auto&lt;IntegerKeyedDictionaryValueProvider&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_success_result_for_existing_integer_string_dictionary_item" methodname="TryGetValueAsync_returns_success_result_for_existing_integer_string_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.IntegerKeyedDictionaryValueProviderTests" result="Passed" duration="0.000589" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="NamedTalesValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.NamedTalesValueProviderTests" total="2" passed="2" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.011293">
            <test-case name="TryGetValueAsync_returns_result_from_object_if_it_is_IGetsNamedTalesValue(auto&lt;NamedTalesValueProvider&gt;,auto&lt;String&gt;,auto&lt;IGetsNamedTalesValue&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.NamedTalesValueProviderTests.TryGetValueAsync_returns_result_from_object_if_it_is_IGetsNamedTalesValue" methodname="TryGetValueAsync_returns_result_from_object_if_it_is_IGetsNamedTalesValue" classname="ZptSharp.PathExpressions.ValueProviders.NamedTalesValueProviderTests" result="Passed" duration="0.001196" asserts="0" />
            <test-case name="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_IGetsNamedTalesValue(auto&lt;IGetsValueFromObject&gt;,auto&lt;NamedTalesValueProvider&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.NamedTalesValueProviderTests.TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_IGetsNamedTalesValue" methodname="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_IGetsNamedTalesValue" classname="ZptSharp.PathExpressions.ValueProviders.NamedTalesValueProviderTests" result="Passed" duration="0.010097" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="ReflectionObjectValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests" total="5" passed="5" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.011107">
            <test-case name="ReflectionObjectValueProvider_returns_value_from_field_when_name_matches(auto&lt;ReflectionObjectValueProvider&gt;,auto&lt;MyCustomType&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests.ReflectionObjectValueProvider_returns_value_from_field_when_name_matches" methodname="ReflectionObjectValueProvider_returns_value_from_field_when_name_matches" classname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests" result="Passed" duration="0.001934" asserts="0" />
            <test-case name="ReflectionObjectValueProvider_returns_value_from_method_when_name_matches(auto&lt;ReflectionObjectValueProvider&gt;,auto&lt;MyCustomType&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests.ReflectionObjectValueProvider_returns_value_from_method_when_name_matches" methodname="ReflectionObjectValueProvider_returns_value_from_method_when_name_matches" classname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests" result="Passed" duration="0.00625" asserts="0" />
            <test-case name="ReflectionObjectValueProvider_returns_value_from_property_when_name_matches(auto&lt;ReflectionObjectValueProvider&gt;,auto&lt;MyCustomType&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests.ReflectionObjectValueProvider_returns_value_from_property_when_name_matches" methodname="ReflectionObjectValueProvider_returns_value_from_property_when_name_matches" classname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests" result="Passed" duration="0.000506" asserts="0" />
            <test-case name="ReflectionObjectValueProvider_returns_value_from_wrapped_service_if_no_members_match(auto&lt;IGetsValueFromObject&gt;,auto&lt;ReflectionObjectValueProvider&gt;,auto&lt;MyCustomType&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests.ReflectionObjectValueProvider_returns_value_from_wrapped_service_if_no_members_match" methodname="ReflectionObjectValueProvider_returns_value_from_wrapped_service_if_no_members_match" classname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests" result="Passed" duration="0.001288" asserts="0" />
            <test-case name="ReflectionObjectValueProvider_returns_value_from_wrapped_service_if_object_is_null(auto&lt;IGetsValueFromObject&gt;,auto&lt;ReflectionObjectValueProvider&gt;,auto&lt;String&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests.ReflectionObjectValueProvider_returns_value_from_wrapped_service_if_object_is_null" methodname="ReflectionObjectValueProvider_returns_value_from_wrapped_service_if_object_is_null" classname="ZptSharp.PathExpressions.ValueProviders.ReflectionObjectValueProviderTests" result="Passed" duration="0.001129" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" name="StringKeyedDictionaryValueProviderTests" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" total="7" passed="7" failed="0" inconclusive="0" skipped="0" result="Passed" duration="0.0556329">
            <test-case name="TryGetValueAsync_returns_failure_result_for_nonexistent_item_in_expando_object(auto&lt;StringKeyedDictionaryValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_failure_result_for_nonexistent_item_in_expando_object" methodname="TryGetValueAsync_returns_failure_result_for_nonexistent_item_in_expando_object" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.0489879" asserts="0" />
            <test-case name="TryGetValueAsync_returns_failure_result_for_nonexistent_string_object_dictionary_item(auto&lt;StringKeyedDictionaryValueProvider&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_failure_result_for_nonexistent_string_object_dictionary_item" methodname="TryGetValueAsync_returns_failure_result_for_nonexistent_string_object_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.000495" asserts="0" />
            <test-case name="TryGetValueAsync_returns_failure_result_for_nonexistent_string_string_dictionary_item(auto&lt;StringKeyedDictionaryValueProvider&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_failure_result_for_nonexistent_string_string_dictionary_item" methodname="TryGetValueAsync_returns_failure_result_for_nonexistent_string_string_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.000806" asserts="0" />
            <test-case name="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_a_dictionary_keyed_by_string(auto&lt;IGetsValueFromObject&gt;,auto&lt;StringKeyedDictionaryValueProvider&gt;,auto&lt;String&gt;,auto&lt;Object&gt;,auto&lt;GetValueResult&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_a_dictionary_keyed_by_string" methodname="TryGetValueAsync_returns_result_from_wrapped_service_if_object_is_not_a_dictionary_keyed_by_string" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.00149" asserts="0" />
            <test-case name="TryGetValueAsync_returns_success_result_for_existing_item_in_expando_object(auto&lt;StringKeyedDictionaryValueProvider&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_success_result_for_existing_item_in_expando_object" methodname="TryGetValueAsync_returns_success_result_for_existing_item_in_expando_object" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.002879" asserts="0" />
            <test-case name="TryGetValueAsync_returns_success_result_for_existing_string_object_dictionary_item(auto&lt;StringKeyedDictionaryValueProvider&gt;,auto&lt;Object&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_success_result_for_existing_string_object_dictionary_item" methodname="TryGetValueAsync_returns_success_result_for_existing_string_object_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.000428" asserts="0" />
            <test-case name="TryGetValueAsync_returns_success_result_for_existing_string_string_dictionary_item(auto&lt;StringKeyedDictionaryValueProvider&gt;,auto&lt;String&gt;)" fullname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests.TryGetValueAsync_returns_success_result_for_existing_string_string_dictionary_item" methodname="TryGetValueAsync_returns_success_result_for_existing_string_string_dictionary_item" classname="ZptSharp.PathExpressions.ValueProviders.StringKeyedDictionaryValueProviderTests" result="Passed" duration="0.000547" asserts="0" />
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <errors />
  </test-suite>
</test-run>