<?xml version="1.0" encoding="utf-8"?>
<root>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="CannotGetReaderWriterForFile" xml:space="preserve">
        <value>No registered document reader/writer is suitable for the file '{0}'.
To render ZPT document files, a suitable document provider must first be registered using `{1}'.
The provider is then selected based upon the file name extension of the ZPT document file to be rendered.</value>
    </data>
    <data name="CannotConvertEvaluatedResult" xml:space="preserve">
        <value>The generic type parameter used with `{0}' must be suitable for the type of returned expression result.
Expression:{1}
Expected type:{2}
Actual type:{3}</value>
    </data>
    <data name="MacroNotFound" xml:space="preserve">
        <value>A '{0}' attribute indicates that the element should use a METAL macro.  The macro indicated by the expression could not be found.
Element:{1}
Expression:{2}</value>
    </data>
    <data name="ExpressionTypeMustNotBeNullOrEmpty" xml:space="preserve">
        <value>The expression type must not be null or an empty string.</value>
    </data>
    <data name="NoEvaluatorForExpressionType" xml:space="preserve">
        <value>There is no evaluator implementation type registered for expressions of type {0}.  You must use `{1}' to register an implementation type for this expression type first.</value>
    </data>
    <data name="EvaluatorAlreadyRegistered" xml:space="preserve">
        <value>There is already an evaluator implementation type registered for expressions of type {0}.  You must either avoid registering an evaluator more than once, or use `{1}' to remove this registration first.</value>
    </data>
    <data name="EvaluatorTypeMustImplementInterface" xml:space="preserve">
        <value>The evaluator implementation type must be an implementation of `{0}'.
Type registered:{1}</value>
    </data>
</root>
